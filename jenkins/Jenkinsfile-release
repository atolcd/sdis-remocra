#!/usr/bin/env groovy

pipeline {
  agent {
    label 'release'
  }
  environment {
    NEXUS_REPO = 'https://nexus3-ovh.priv.atolcd.com/repository/sdis-remocra/zip'
    // Force HOME for npm
    HOME = "${env.WORKSPACE}"
  }
  stages {
    stage('Clean and build') {
      agent {
        docker {
          image 'cvagner/docker-jdk-maven-sencha-cmd:8-3.6.3-3.0.2'
          args '-v /var/lib/jenkins/.m2/settings.xml:/tmp/settings.xml:ro'
          reuseNode true
        }
      }
      stages {
        stage("Clean") {
          steps {
            // Run the maven build (mvn is in the PATH in the Docker image)
            sh "mvn -e -Duser.home=${env.WORKSPACE} -s /tmp/settings.xml -U clean"
          }
        }
        stage("Build update") {
          when {
            expression {
              return env.BUILD_MODE == 'all' || env.BUILD_MODE == 'update';
            }
          }
          steps {
            sh "mvn -e -Duser.home=${env.WORKSPACE} -s /tmp/settings.xml -U verify -P modeinfo-able -P update"
          }
        }
        stage("Build install") {
          when {
            expression {
              return env.BUILD_MODE == 'all' || env.BUILD_MODE == 'install';
            }
          }
          steps {
            sh "mvn -e -Duser.home=${env.WORKSPACE} -s /tmp/settings.xml -U verify -P modeinfo-able -P install"
          }
        }
      }
      post {
        success {
          // → Archivage
          archiveArtifacts allowEmptyArchive: false, artifacts: 'dist/target/*.zip', fingerprint: true
          // → Nexus
          withCredentials([usernameColonPassword(credentialsId: 'nexus3-jenkins', variable: 'NEXUS3_AUTH')]) {
            sh 'find dist/target -name *.zip -type f -exec basename {} \\; | xargs -I{} curl -v --user "$NEXUS3_AUTH" -T dist/target/{} "$NEXUS_REPO/{}"'
          }
        }
        always {
          sh "git checkout -- ."
        }
      }
    }
  }
}
