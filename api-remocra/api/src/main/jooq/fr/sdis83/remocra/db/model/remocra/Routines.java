/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.remocra;


import fr.sdis83.remocra.db.model.remocra.routines.CalculDebitPression;
import fr.sdis83.remocra.db.model.remocra.routines.CalculDebitPressionBspp;
import fr.sdis83.remocra.db.model.remocra.routines.CalculIndispo;
import fr.sdis83.remocra.db.model.remocra.routines.JaroWinkler;
import fr.sdis83.remocra.db.model.remocra.routines.Nextnumerointerne;
import fr.sdis83.remocra.db.model.remocra.routines.SoundexFr;
import fr.sdis83.remocra.db.model.remocra.routines.UpdateAllIndispo;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;


/**
 * Convenience access to all stored procedures and functions in remocra
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>remocra.calcul_debit_pression</code>
     */
    public static void calculDebitPression(Configuration configuration, Long idHydrant) {
        CalculDebitPression p = new CalculDebitPression();
        p.setIdHydrant(idHydrant);

        p.execute(configuration);
    }

    /**
     * Call <code>remocra.calcul_debit_pression_bspp</code>
     */
    public static void calculDebitPressionBspp(Configuration configuration, Long idHydrant) {
        CalculDebitPressionBspp p = new CalculDebitPressionBspp();
        p.setIdHydrant(idHydrant);

        p.execute(configuration);
    }

    /**
     * Call <code>remocra.calcul_indispo</code>
     */
    public static void calculIndispo(Configuration configuration, Long idHydrant) {
        CalculIndispo p = new CalculIndispo();
        p.setIdHydrant(idHydrant);

        p.execute(configuration);
    }

    /**
     * Call <code>remocra.jaro_winkler</code>
     */
    public static Double jaroWinkler(Configuration configuration, String str1In, String str2In) {
        JaroWinkler f = new JaroWinkler();
        f.setStr1In(str1In);
        f.setStr2In(str2In);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>remocra.jaro_winkler</code> as a field.
     */
    public static Field<Double> jaroWinkler(String str1In, String str2In) {
        JaroWinkler f = new JaroWinkler();
        f.setStr1In(str1In);
        f.setStr2In(str2In);

        return f.asField();
    }

    /**
     * Get <code>remocra.jaro_winkler</code> as a field.
     */
    public static Field<Double> jaroWinkler(Field<String> str1In, Field<String> str2In) {
        JaroWinkler f = new JaroWinkler();
        f.setStr1In(str1In);
        f.setStr2In(str2In);

        return f.asField();
    }

    /**
     * Call <code>remocra.nextnumerointerne</code>
     */
    public static Long nextnumerointerne(Configuration configuration, Long idhydrant, Long idtypehydrant, Long idcommune, Long idzonespeciale, Boolean frombeginning) {
        Nextnumerointerne f = new Nextnumerointerne();
        f.setIdhydrant(idhydrant);
        f.setIdtypehydrant(idtypehydrant);
        f.setIdcommune(idcommune);
        f.setIdzonespeciale(idzonespeciale);
        f.setFrombeginning(frombeginning);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>remocra.nextnumerointerne</code> as a field.
     */
    public static Field<Long> nextnumerointerne(Long idhydrant, Long idtypehydrant, Long idcommune, Long idzonespeciale, Boolean frombeginning) {
        Nextnumerointerne f = new Nextnumerointerne();
        f.setIdhydrant(idhydrant);
        f.setIdtypehydrant(idtypehydrant);
        f.setIdcommune(idcommune);
        f.setIdzonespeciale(idzonespeciale);
        f.setFrombeginning(frombeginning);

        return f.asField();
    }

    /**
     * Get <code>remocra.nextnumerointerne</code> as a field.
     */
    public static Field<Long> nextnumerointerne(Field<Long> idhydrant, Field<Long> idtypehydrant, Field<Long> idcommune, Field<Long> idzonespeciale, Field<Boolean> frombeginning) {
        Nextnumerointerne f = new Nextnumerointerne();
        f.setIdhydrant(idhydrant);
        f.setIdtypehydrant(idtypehydrant);
        f.setIdcommune(idcommune);
        f.setIdzonespeciale(idzonespeciale);
        f.setFrombeginning(frombeginning);

        return f.asField();
    }

    /**
     * Call <code>remocra.soundex_fr</code>
     */
    public static String soundexFr(Configuration configuration, String __1) {
        SoundexFr f = new SoundexFr();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>remocra.soundex_fr</code> as a field.
     */
    public static Field<String> soundexFr(String __1) {
        SoundexFr f = new SoundexFr();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>remocra.soundex_fr</code> as a field.
     */
    public static Field<String> soundexFr(Field<String> __1) {
        SoundexFr f = new SoundexFr();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>remocra.update_all_indispo</code>
     */
    public static String updateAllIndispo(Configuration configuration) {
        UpdateAllIndispo f = new UpdateAllIndispo();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>remocra.update_all_indispo</code> as a field.
     */
    public static Field<String> updateAllIndispo() {
        UpdateAllIndispo f = new UpdateAllIndispo();

        return f.asField();
    }
}
