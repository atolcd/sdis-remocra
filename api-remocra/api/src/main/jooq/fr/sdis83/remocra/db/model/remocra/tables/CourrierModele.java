/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Indexes;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Modèle de courrier reférencant un fichier OTT et permettant la génération 
 * d'un courrier au format ODT
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourrierModele extends TableImpl<Record> {

    private static final long serialVersionUID = 1182194689;

    /**
     * The reference instance of <code>remocra.courrier_modele</code>
     */
    public static final CourrierModele COURRIER_MODELE = new CourrierModele();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.courrier_modele.id</code>. Identifiant interne autogénéré
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.courrier_modele_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "Identifiant interne autogénéré");

    /**
     * The column <code>remocra.courrier_modele.code</code>. Code de catégorie permettant de regrouper les modèles de courriers entre eux. Issu de la métadonnée personnalisée "REMOCRA_CATEGORIE_MODELE" du fichier OTT
     */
    public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR, this, "Code de catégorie permettant de regrouper les modèles de courriers entre eux. Issu de la métadonnée personnalisée \"REMOCRA_CATEGORIE_MODELE\" du fichier OTT");

    /**
     * The column <code>remocra.courrier_modele.libelle</code>. Libellé du modèle de courrier affiché dans les listes déroulantes. Issu de la métadonnée "Titre" du fichier OTT
     */
    public final TableField<Record, String> LIBELLE = createField("libelle", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Libellé du modèle de courrier affiché dans les listes déroulantes. Issu de la métadonnée \"Titre\" du fichier OTT");

    /**
     * The column <code>remocra.courrier_modele.description</code>. Description du modèle de courrier. Issu de la métadonnée "Commentaire" du fichier OTT
     */
    public final TableField<Record, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "Description du modèle de courrier. Issu de la métadonnée \"Commentaire\" du fichier OTT");

    /**
     * The column <code>remocra.courrier_modele.modele_ott</code>. Fichier de modèle OTT à utiliser pour générer le document ODT
     */
    public final TableField<Record, String> MODELE_OTT = createField("modele_ott", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Fichier de modèle OTT à utiliser pour générer le document ODT");

    /**
     * The column <code>remocra.courrier_modele.source_xml</code>. Requête SQL générant une structure XML exploitable par le modèle de courrier OTT via le language FreeMarker
     */
    public final TableField<Record, String> SOURCE_XML = createField("source_xml", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Requête SQL générant une structure XML exploitable par le modèle de courrier OTT via le language FreeMarker");

    /**
     * The column <code>remocra.courrier_modele.message_objet</code>.
     */
    public final TableField<Record, String> MESSAGE_OBJET = createField("message_objet", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.courrier_modele.message_corps</code>.
     */
    public final TableField<Record, String> MESSAGE_CORPS = createField("message_corps", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.courrier_modele.thematique</code>.
     */
    public final TableField<Record, Long> THEMATIQUE = createField("thematique", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>remocra.courrier_modele</code> table reference
     */
    public CourrierModele() {
        this(DSL.name("courrier_modele"), null);
    }

    /**
     * Create an aliased <code>remocra.courrier_modele</code> table reference
     */
    public CourrierModele(String alias) {
        this(DSL.name(alias), COURRIER_MODELE);
    }

    /**
     * Create an aliased <code>remocra.courrier_modele</code> table reference
     */
    public CourrierModele(Name alias) {
        this(alias, COURRIER_MODELE);
    }

    private CourrierModele(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private CourrierModele(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Modèle de courrier reférencant un fichier OTT et permettant la génération d'un courrier au format ODT"));
    }

    public <O extends Record> CourrierModele(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, COURRIER_MODELE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COURRIER_MODELE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_COURRIER_MODELE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.COURRIER_MODELE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.COURRIER_MODELE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.COURRIER_MODELE__COURRIER_MODELE_THEMATIQUE_FK);
    }

    public Thematique thematique() {
        return new Thematique(this, Keys.COURRIER_MODELE__COURRIER_MODELE_THEMATIQUE_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourrierModele as(String alias) {
        return new CourrierModele(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourrierModele as(Name alias) {
        return new CourrierModele(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CourrierModele rename(String name) {
        return new CourrierModele(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CourrierModele rename(Name name) {
        return new CourrierModele(name, null);
    }
}
