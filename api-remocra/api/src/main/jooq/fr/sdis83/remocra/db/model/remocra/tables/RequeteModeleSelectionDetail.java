/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Indexes;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Détail des éléments des requêtes personnalisées REMOCRA
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequeteModeleSelectionDetail extends TableImpl<Record> {

    private static final long serialVersionUID = 1937535110;

    /**
     * The reference instance of <code>remocra.requete_modele_selection_detail</code>
     */
    public static final RequeteModeleSelectionDetail REQUETE_MODELE_SELECTION_DETAIL = new RequeteModeleSelectionDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.requete_modele_selection_detail.id</code>. Identifiant interne auto-généré
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.requete_modele_selection_detail_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "Identifiant interne auto-généré");

    /**
     * The column <code>remocra.requete_modele_selection_detail.selection</code>. Sélection parente
     */
    public final TableField<Record, Long> SELECTION = createField("selection", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Sélection parente");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<Record, Object> GEOMETRIE = createField("geometrie", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), this, "Géométrie des éléments sélectionnés");

    /**
     * Create a <code>remocra.requete_modele_selection_detail</code> table reference
     */
    public RequeteModeleSelectionDetail() {
        this(DSL.name("requete_modele_selection_detail"), null);
    }

    /**
     * Create an aliased <code>remocra.requete_modele_selection_detail</code> table reference
     */
    public RequeteModeleSelectionDetail(String alias) {
        this(DSL.name(alias), REQUETE_MODELE_SELECTION_DETAIL);
    }

    /**
     * Create an aliased <code>remocra.requete_modele_selection_detail</code> table reference
     */
    public RequeteModeleSelectionDetail(Name alias) {
        this(alias, REQUETE_MODELE_SELECTION_DETAIL);
    }

    private RequeteModeleSelectionDetail(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private RequeteModeleSelectionDetail(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Détail des éléments des requêtes personnalisées REMOCRA"));
    }

    public <O extends Record> RequeteModeleSelectionDetail(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, REQUETE_MODELE_SELECTION_DETAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REQUETE_MODELE_SELECTION_DETAIL_GEOMETRIE_IDX, Indexes.REQUETE_MODELE_SELECTION_DETAIL_PKEY, Indexes.REQUETE_MODELE_SELECTION_DETAIL_SELECTION_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_REQUETE_MODELE_SELECTION_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.REQUETE_MODELE_SELECTION_DETAIL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.REQUETE_MODELE_SELECTION_DETAIL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.REQUETE_MODELE_SELECTION_DETAIL__REQUETE_MODELE_SELECTION);
    }

    public RequeteModeleSelection requeteModeleSelection() {
        return new RequeteModeleSelection(this, Keys.REQUETE_MODELE_SELECTION_DETAIL__REQUETE_MODELE_SELECTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequeteModeleSelectionDetail as(String alias) {
        return new RequeteModeleSelectionDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequeteModeleSelectionDetail as(Name alias) {
        return new RequeteModeleSelectionDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RequeteModeleSelectionDetail rename(String name) {
        return new RequeteModeleSelectionDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RequeteModeleSelectionDetail rename(Name name) {
        return new RequeteModeleSelectionDetail(name, null);
    }
}
