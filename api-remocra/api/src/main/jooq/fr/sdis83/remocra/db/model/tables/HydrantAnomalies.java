/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HydrantAnomalies extends TableImpl<Record> {

    private static final long serialVersionUID = -1290065150;

    /**
     * The reference instance of <code>remocra.hydrant_anomalies</code>
     */
    public static final HydrantAnomalies HYDRANT_ANOMALIES = new HydrantAnomalies();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.hydrant_anomalies.hydrant</code>.
     */
    public final TableField<Record, Long> HYDRANT = createField("hydrant", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.hydrant_anomalies.anomalies</code>.
     */
    public final TableField<Record, Long> ANOMALIES = createField("anomalies", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>remocra.hydrant_anomalies</code> table reference
     */
    public HydrantAnomalies() {
        this(DSL.name("hydrant_anomalies"), null);
    }

    /**
     * Create an aliased <code>remocra.hydrant_anomalies</code> table reference
     */
    public HydrantAnomalies(String alias) {
        this(DSL.name(alias), HYDRANT_ANOMALIES);
    }

    /**
     * Create an aliased <code>remocra.hydrant_anomalies</code> table reference
     */
    public HydrantAnomalies(Name alias) {
        this(alias, HYDRANT_ANOMALIES);
    }

    private HydrantAnomalies(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private HydrantAnomalies(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> HydrantAnomalies(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, HYDRANT_ANOMALIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HYDRANT_ANOMALIES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.HYDRANT_ANOMALIES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.HYDRANT_ANOMALIES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.HYDRANT_ANOMALIES__FK5E56B38A50004FC, Keys.HYDRANT_ANOMALIES__FK5E56B38A1C51B70D);
    }

    public Hydrant hydrant() {
        return new Hydrant(this, Keys.HYDRANT_ANOMALIES__FK5E56B38A50004FC);
    }

    public TypeHydrantAnomalie typeHydrantAnomalie() {
        return new TypeHydrantAnomalie(this, Keys.HYDRANT_ANOMALIES__FK5E56B38A1C51B70D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HydrantAnomalies as(String alias) {
        return new HydrantAnomalies(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HydrantAnomalies as(Name alias) {
        return new HydrantAnomalies(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HydrantAnomalies rename(String name) {
        return new HydrantAnomalies(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HydrantAnomalies rename(Name name) {
        return new HydrantAnomalies(name, null);
    }
}
