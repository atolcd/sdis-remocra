/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.TimestampToInstantConverter;
import fr.sdis83.remocra.db.model.remocra.Indexes;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.time.Instant;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rci extends TableImpl<Record> {

    private static final long serialVersionUID = 1129413000;

    /**
     * The reference instance of <code>remocra.rci</code>
     */
    public static final Rci RCI = new Rci();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.rci.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.rci_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>remocra.rci.commentaire_conclusions</code>.
     */
    public final TableField<Record, String> COMMENTAIRE_CONCLUSIONS = createField("commentaire_conclusions", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.complement</code>.
     */
    public final TableField<Record, String> COMPLEMENT = createField("complement", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.coorddfci</code>.
     */
    public final TableField<Record, String> COORDDFCI = createField("coorddfci", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.date_incendie</code>.
     */
    public final TableField<Record, Instant> DATE_INCENDIE = createField("date_incendie", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new TimestampToInstantConverter());

    /**
     * The column <code>remocra.rci.date_modification</code>.
     */
    public final TableField<Record, Instant> DATE_MODIFICATION = createField("date_modification", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new TimestampToInstantConverter());

    /**
     * The column <code>remocra.rci.direction_vent</code>.
     */
    public final TableField<Record, Integer> DIRECTION_VENT = createField("direction_vent", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>remocra.rci.force_vent</code>.
     */
    public final TableField<Record, Integer> FORCE_VENT = createField("force_vent", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>remocra.rci.forces_ordre</code>.
     */
    public final TableField<Record, String> FORCES_ORDRE = createField("forces_ordre", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.gel_lieux</code>.
     */
    public final TableField<Record, Boolean> GEL_LIEUX = createField("gel_lieux", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<Record, Object> GEOMETRIE = createField("geometrie", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\"").nullable(false), this, "");

    /**
     * The column <code>remocra.rci.hygrometrie</code>.
     */
    public final TableField<Record, Integer> HYGROMETRIE = createField("hygrometrie", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>remocra.rci.indice_rothermel</code>.
     */
    public final TableField<Record, Integer> INDICE_ROTHERMEL = createField("indice_rothermel", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>remocra.rci.point_eclosion</code>.
     */
    public final TableField<Record, String> POINT_ECLOSION = createField("point_eclosion", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.premier_cos</code>.
     */
    public final TableField<Record, String> PREMIER_COS = createField("premier_cos", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.premier_engin</code>.
     */
    public final TableField<Record, String> PREMIER_ENGIN = createField("premier_engin", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.superficie_finale</code>.
     */
    public final TableField<Record, Double> SUPERFICIE_FINALE = createField("superficie_finale", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>remocra.rci.superficie_referent</code>.
     */
    public final TableField<Record, Double> SUPERFICIE_REFERENT = createField("superficie_referent", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>remocra.rci.superficie_secours</code>.
     */
    public final TableField<Record, Double> SUPERFICIE_SECOURS = createField("superficie_secours", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>remocra.rci.temperature</code>.
     */
    public final TableField<Record, Double> TEMPERATURE = createField("temperature", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>remocra.rci.vent_local</code>.
     */
    public final TableField<Record, Boolean> VENT_LOCAL = createField("vent_local", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>remocra.rci.version</code>.
     */
    public final TableField<Record, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>remocra.rci.voie</code>.
     */
    public final TableField<Record, String> VOIE = createField("voie", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.rci.categorie_promethee</code>.
     */
    public final TableField<Record, Long> CATEGORIE_PROMETHEE = createField("categorie_promethee", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.commune</code>.
     */
    public final TableField<Record, Long> COMMUNE = createField("commune", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.degre_certitude</code>.
     */
    public final TableField<Record, Long> DEGRE_CERTITUDE = createField("degre_certitude", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.origine_alerte</code>.
     */
    public final TableField<Record, Long> ORIGINE_ALERTE = createField("origine_alerte", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.rci.utilisateur</code>.
     */
    public final TableField<Record, Long> UTILISATEUR = createField("utilisateur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.rci.gdh</code>.
     */
    public final TableField<Record, Instant> GDH = createField("gdh", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampToInstantConverter());

    /**
     * The column <code>remocra.rci.arrivee_ddtm_onf</code>.
     */
    public final TableField<Record, Long> ARRIVEE_DDTM_ONF = createField("arrivee_ddtm_onf", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.arrivee_sdis</code>.
     */
    public final TableField<Record, Long> ARRIVEE_SDIS = createField("arrivee_sdis", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.arrivee_gendarmerie</code>.
     */
    public final TableField<Record, Long> ARRIVEE_GENDARMERIE = createField("arrivee_gendarmerie", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.arrivee_police</code>.
     */
    public final TableField<Record, Long> ARRIVEE_POLICE = createField("arrivee_police", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.famille_promethee</code>.
     */
    public final TableField<Record, Long> FAMILLE_PROMETHEE = createField("famille_promethee", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.partition_promethee</code>.
     */
    public final TableField<Record, Long> PARTITION_PROMETHEE = createField("partition_promethee", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remocra.rci.risque_meteo</code>.
     */
    public final TableField<Record, Long> RISQUE_METEO = createField("risque_meteo", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>remocra.rci</code> table reference
     */
    public Rci() {
        this(DSL.name("rci"), null);
    }

    /**
     * Create an aliased <code>remocra.rci</code> table reference
     */
    public Rci(String alias) {
        this(DSL.name(alias), RCI);
    }

    /**
     * Create an aliased <code>remocra.rci</code> table reference
     */
    public Rci(Name alias) {
        this(alias, RCI);
    }

    private Rci(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Rci(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Rci(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, RCI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RCI_ARRIVEE_DDTM_ONF_IDX, Indexes.RCI_ARRIVEE_GENDARMERIE_IDX, Indexes.RCI_ARRIVEE_POLICE_IDX, Indexes.RCI_ARRIVEE_SDIS_IDX, Indexes.RCI_CATEGORIE_PROMETHEE_IDX, Indexes.RCI_COMMUNE_IDX, Indexes.RCI_DEGRE_CERTITUDE_IDX, Indexes.RCI_FAMILLE_PROMETHEE_IDX, Indexes.RCI_GEOMETRIE_IDX, Indexes.RCI_ORIGINE_ALERTE_IDX, Indexes.RCI_PARTITION_PROMETHEE_IDX, Indexes.RCI_PKEY, Indexes.RCI_UTILISATEUR_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_RCI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.RCI_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.RCI_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.RCI__FK1B8583FB5F1FE, Keys.RCI__FK1B858D2DA796C, Keys.RCI__FK1B85821870359, Keys.RCI__FK1B85838423EE7, Keys.RCI__FK1B858A98055B2, Keys.RCI__FK1B858A9234C5C, Keys.RCI__FK1B858A9C54D11, Keys.RCI__FK1B858A9CC1BBB, Keys.RCI__FK1B858A9948AA1, Keys.RCI__FK_RCI_FAMILLE_PROMETHEE, Keys.RCI__FK_RCI_PARTITION_PROMETHEE, Keys.RCI__FK_RCI_RISQUE_METEO);
    }

    public TypeRciPromCategorie typeRciPromCategorie() {
        return new TypeRciPromCategorie(this, Keys.RCI__FK1B8583FB5F1FE);
    }

    public Commune commune() {
        return new Commune(this, Keys.RCI__FK1B858D2DA796C);
    }

    public TypeRciDegreCertitude typeRciDegreCertitude() {
        return new TypeRciDegreCertitude(this, Keys.RCI__FK1B85821870359);
    }

    public TypeRciOrigineAlerte typeRciOrigineAlerte() {
        return new TypeRciOrigineAlerte(this, Keys.RCI__FK1B85838423EE7);
    }

    public Utilisateur rci_Fk1b858a98055b2() {
        return new Utilisateur(this, Keys.RCI__FK1B858A98055B2);
    }

    public Utilisateur rci_Fk1b858a9234c5c() {
        return new Utilisateur(this, Keys.RCI__FK1B858A9234C5C);
    }

    public Utilisateur rci_Fk1b858a9c54d11() {
        return new Utilisateur(this, Keys.RCI__FK1B858A9C54D11);
    }

    public Utilisateur rci_Fk1b858a9cc1bbb() {
        return new Utilisateur(this, Keys.RCI__FK1B858A9CC1BBB);
    }

    public Utilisateur rci_Fk1b858a9948aa1() {
        return new Utilisateur(this, Keys.RCI__FK1B858A9948AA1);
    }

    public TypeRciPromFamille typeRciPromFamille() {
        return new TypeRciPromFamille(this, Keys.RCI__FK_RCI_FAMILLE_PROMETHEE);
    }

    public TypeRciPromPartition typeRciPromPartition() {
        return new TypeRciPromPartition(this, Keys.RCI__FK_RCI_PARTITION_PROMETHEE);
    }

    public TypeRciRisqueMeteo typeRciRisqueMeteo() {
        return new TypeRciRisqueMeteo(this, Keys.RCI__FK_RCI_RISQUE_METEO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rci as(String alias) {
        return new Rci(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rci as(Name alias) {
        return new Rci(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Rci rename(String name) {
        return new Rci(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Rci rename(Name name) {
        return new Rci(name, null);
    }
}
