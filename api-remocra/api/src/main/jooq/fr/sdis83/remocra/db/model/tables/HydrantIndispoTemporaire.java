/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.converter.TimestampToInstantConverter;
import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.time.Instant;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Indisponibilié temporaire d'hydrant
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HydrantIndispoTemporaire extends TableImpl<Record> {

    private static final long serialVersionUID = 214648113;

    /**
     * The reference instance of <code>remocra.hydrant_indispo_temporaire</code>
     */
    public static final HydrantIndispoTemporaire HYDRANT_INDISPO_TEMPORAIRE = new HydrantIndispoTemporaire();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.hydrant_indispo_temporaire_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.date_debut</code>.
     */
    public final TableField<Record, Instant> DATE_DEBUT = createField("date_debut", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampToInstantConverter());

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.date_fin</code>.
     */
    public final TableField<Record, Instant> DATE_FIN = createField("date_fin", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampToInstantConverter());

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.motif</code>.
     */
    public final TableField<Record, String> MOTIF = createField("motif", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.date_rappel_debut</code>. Date de l'envoi du rappel de debut 
     */
    public final TableField<Record, Instant> DATE_RAPPEL_DEBUT = createField("date_rappel_debut", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de l'envoi du rappel de debut ", new TimestampToInstantConverter());

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.date_rappel_fin</code>. Date de l'envoi du rappel de fin 
     */
    public final TableField<Record, Instant> DATE_RAPPEL_FIN = createField("date_rappel_fin", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de l'envoi du rappel de fin ", new TimestampToInstantConverter());

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.statut</code>.
     */
    public final TableField<Record, Long> STATUT = createField("statut", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.total_hydrants</code>.
     */
    public final TableField<Record, Integer> TOTAL_HYDRANTS = createField("total_hydrants", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.bascule_auto_indispo</code>.
     */
    public final TableField<Record, Boolean> BASCULE_AUTO_INDISPO = createField("bascule_auto_indispo", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.bascule_auto_dispo</code>.
     */
    public final TableField<Record, Boolean> BASCULE_AUTO_DISPO = createField("bascule_auto_dispo", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.mel_avant_indispo</code>.
     */
    public final TableField<Record, Boolean> MEL_AVANT_INDISPO = createField("mel_avant_indispo", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>remocra.hydrant_indispo_temporaire.mel_avant_dispo</code>.
     */
    public final TableField<Record, Boolean> MEL_AVANT_DISPO = createField("mel_avant_dispo", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>remocra.hydrant_indispo_temporaire</code> table reference
     */
    public HydrantIndispoTemporaire() {
        this(DSL.name("hydrant_indispo_temporaire"), null);
    }

    /**
     * Create an aliased <code>remocra.hydrant_indispo_temporaire</code> table reference
     */
    public HydrantIndispoTemporaire(String alias) {
        this(DSL.name(alias), HYDRANT_INDISPO_TEMPORAIRE);
    }

    /**
     * Create an aliased <code>remocra.hydrant_indispo_temporaire</code> table reference
     */
    public HydrantIndispoTemporaire(Name alias) {
        this(alias, HYDRANT_INDISPO_TEMPORAIRE);
    }

    private HydrantIndispoTemporaire(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private HydrantIndispoTemporaire(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Indisponibilié temporaire d'hydrant"));
    }

    public <O extends Record> HydrantIndispoTemporaire(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, HYDRANT_INDISPO_TEMPORAIRE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HYDRANT_INDISPO_TEMPORAIRE_PKEY, Indexes.HYDRANT_INDISPO_TEMPORAIRE_STATUT_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_HYDRANT_INDISPO_TEMPORAIRE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.HYDRANT_INDISPO_TEMPORAIRE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.HYDRANT_INDISPO_TEMPORAIRE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.HYDRANT_INDISPO_TEMPORAIRE__FK_HYDRANT_INDISPO_TEMPORAIRE_STATUT);
    }

    public TypeHydrantIndispoStatut typeHydrantIndispoStatut() {
        return new TypeHydrantIndispoStatut(this, Keys.HYDRANT_INDISPO_TEMPORAIRE__FK_HYDRANT_INDISPO_TEMPORAIRE_STATUT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HydrantIndispoTemporaire as(String alias) {
        return new HydrantIndispoTemporaire(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HydrantIndispoTemporaire as(Name alias) {
        return new HydrantIndispoTemporaire(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HydrantIndispoTemporaire rename(String name) {
        return new HydrantIndispoTemporaire(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HydrantIndispoTemporaire rename(Name name) {
        return new HydrantIndispoTemporaire(name, null);
    }
}
