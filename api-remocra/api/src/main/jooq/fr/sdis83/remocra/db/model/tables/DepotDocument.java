/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepotDocument extends TableImpl<Record> {

    private static final long serialVersionUID = -2007503636;

    /**
     * The reference instance of <code>remocra.depot_document</code>
     */
    public static final DepotDocument DEPOT_DOCUMENT = new DepotDocument();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.depot_document.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.depot_document_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>remocra.depot_document.document</code>.
     */
    public final TableField<Record, Long> DOCUMENT = createField("document", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.depot_document.utilisateur</code>.
     */
    public final TableField<Record, Long> UTILISATEUR = createField("utilisateur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>remocra.depot_document</code> table reference
     */
    public DepotDocument() {
        this(DSL.name("depot_document"), null);
    }

    /**
     * Create an aliased <code>remocra.depot_document</code> table reference
     */
    public DepotDocument(String alias) {
        this(DSL.name(alias), DEPOT_DOCUMENT);
    }

    /**
     * Create an aliased <code>remocra.depot_document</code> table reference
     */
    public DepotDocument(Name alias) {
        this(alias, DEPOT_DOCUMENT);
    }

    private DepotDocument(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private DepotDocument(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DepotDocument(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, DEPOT_DOCUMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEPOT_DOCUMENT_DOCUMENT_IDX, Indexes.DEPOT_DOCUMENT_PKEY, Indexes.DEPOT_DOCUMENT_UTILISATEUR_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_DEPOT_DOCUMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.DEPOT_DOCUMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.DEPOT_DOCUMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.DEPOT_DOCUMENT__FK2B3F72C636F0130A, Keys.DEPOT_DOCUMENT__FK2B3F72C6A98055B2);
    }

    public Document document() {
        return new Document(this, Keys.DEPOT_DOCUMENT__FK2B3F72C636F0130A);
    }

    public Utilisateur utilisateur() {
        return new Utilisateur(this, Keys.DEPOT_DOCUMENT__FK2B3F72C6A98055B2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DepotDocument as(String alias) {
        return new DepotDocument(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DepotDocument as(Name alias) {
        return new DepotDocument(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DepotDocument rename(String name) {
        return new DepotDocument(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DepotDocument rename(Name name) {
        return new DepotDocument(name, null);
    }
}
