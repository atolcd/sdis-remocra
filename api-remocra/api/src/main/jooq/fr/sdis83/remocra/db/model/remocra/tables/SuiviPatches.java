/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.TimestampToInstantConverter;
import fr.sdis83.remocra.db.model.remocra.Indexes;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.time.Instant;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SuiviPatches extends TableImpl<Record> {

    private static final long serialVersionUID = -610966376;

    /**
     * The reference instance of <code>remocra.suivi_patches</code>
     */
    public static final SuiviPatches SUIVI_PATCHES = new SuiviPatches();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.suivi_patches.numero</code>.
     */
    public final TableField<Record, Long> NUMERO = createField("numero", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.suivi_patches.description</code>.
     */
    public final TableField<Record, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>remocra.suivi_patches.application</code>.
     */
    public final TableField<Record, Instant> APPLICATION = createField("application", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new TimestampToInstantConverter());

    /**
     * Create a <code>remocra.suivi_patches</code> table reference
     */
    public SuiviPatches() {
        this(DSL.name("suivi_patches"), null);
    }

    /**
     * Create an aliased <code>remocra.suivi_patches</code> table reference
     */
    public SuiviPatches(String alias) {
        this(DSL.name(alias), SUIVI_PATCHES);
    }

    /**
     * Create an aliased <code>remocra.suivi_patches</code> table reference
     */
    public SuiviPatches(Name alias) {
        this(alias, SUIVI_PATCHES);
    }

    private SuiviPatches(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private SuiviPatches(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SuiviPatches(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SUIVI_PATCHES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SUIVI_PATCHES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.SUIVI_PATCHES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.SUIVI_PATCHES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuiviPatches as(String alias) {
        return new SuiviPatches(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuiviPatches as(Name alias) {
        return new SuiviPatches(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SuiviPatches rename(String name) {
        return new SuiviPatches(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SuiviPatches rename(Name name) {
        return new SuiviPatches(name, null);
    }
}
