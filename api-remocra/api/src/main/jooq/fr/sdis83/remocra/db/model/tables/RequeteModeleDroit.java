/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Profil de droit autorisé pour executer une requête
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequeteModeleDroit extends TableImpl<Record> {

    private static final long serialVersionUID = 184887254;

    /**
     * The reference instance of <code>remocra.requete_modele_droit</code>
     */
    public static final RequeteModeleDroit REQUETE_MODELE_DROIT = new RequeteModeleDroit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.requete_modele_droit.requete_modele</code>. Identifiant du modèle de requête
     */
    public final TableField<Record, Long> REQUETE_MODELE = createField("requete_modele", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant du modèle de requête");

    /**
     * The column <code>remocra.requete_modele_droit.profil_droit</code>. Identifiant du profil de droit autorisé
     */
    public final TableField<Record, Long> PROFIL_DROIT = createField("profil_droit", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant du profil de droit autorisé");

    /**
     * Create a <code>remocra.requete_modele_droit</code> table reference
     */
    public RequeteModeleDroit() {
        this(DSL.name("requete_modele_droit"), null);
    }

    /**
     * Create an aliased <code>remocra.requete_modele_droit</code> table reference
     */
    public RequeteModeleDroit(String alias) {
        this(DSL.name(alias), REQUETE_MODELE_DROIT);
    }

    /**
     * Create an aliased <code>remocra.requete_modele_droit</code> table reference
     */
    public RequeteModeleDroit(Name alias) {
        this(alias, REQUETE_MODELE_DROIT);
    }

    private RequeteModeleDroit(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private RequeteModeleDroit(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Profil de droit autorisé pour executer une requête"));
    }

    public <O extends Record> RequeteModeleDroit(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, REQUETE_MODELE_DROIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REQUETE_MODELE_DROIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.REQUETE_MODELE_DROIT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.REQUETE_MODELE_DROIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.REQUETE_MODELE_DROIT__REQUETE_MODELE_DROIT_REQUETE_MODELE, Keys.REQUETE_MODELE_DROIT__REQUETE_MODELE_DROIT_PROFIL_DROIT);
    }

    public RequeteModele requeteModele() {
        return new RequeteModele(this, Keys.REQUETE_MODELE_DROIT__REQUETE_MODELE_DROIT_REQUETE_MODELE);
    }

    public ProfilDroit profilDroit() {
        return new ProfilDroit(this, Keys.REQUETE_MODELE_DROIT__REQUETE_MODELE_DROIT_PROFIL_DROIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequeteModeleDroit as(String alias) {
        return new RequeteModeleDroit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequeteModeleDroit as(Name alias) {
        return new RequeteModeleDroit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RequeteModeleDroit rename(String name) {
        return new RequeteModeleDroit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RequeteModeleDroit rename(Name name) {
        return new RequeteModeleDroit(name, null);
    }
}
