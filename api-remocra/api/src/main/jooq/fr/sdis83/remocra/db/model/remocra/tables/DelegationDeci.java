/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Indexes;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Organisme REMOCRA de type "COMMUNE" délégant la compétence DECI à un organisme 
 * de type "EPCI"
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DelegationDeci extends TableImpl<Record> {

    private static final long serialVersionUID = 602940468;

    /**
     * The reference instance of <code>remocra.delegation_deci</code>
     */
    public static final DelegationDeci DELEGATION_DECI = new DelegationDeci();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.delegation_deci.organisme_commune</code>. Code de l'organisme REMOCRA de type "COMMUNE" qui délègue la compétence DECI
     */
    public final TableField<Record, String> ORGANISME_COMMUNE = createField("organisme_commune", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Code de l'organisme REMOCRA de type \"COMMUNE\" qui délègue la compétence DECI");

    /**
     * The column <code>remocra.delegation_deci.organisme_epci</code>. Code de l'organisme REMOCRA de type "EPCI" qui bénéficie de la délégation de la compétence DECI
     */
    public final TableField<Record, String> ORGANISME_EPCI = createField("organisme_epci", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Code de l'organisme REMOCRA de type \"EPCI\" qui bénéficie de la délégation de la compétence DECI");

    /**
     * Create a <code>remocra.delegation_deci</code> table reference
     */
    public DelegationDeci() {
        this(DSL.name("delegation_deci"), null);
    }

    /**
     * Create an aliased <code>remocra.delegation_deci</code> table reference
     */
    public DelegationDeci(String alias) {
        this(DSL.name(alias), DELEGATION_DECI);
    }

    /**
     * Create an aliased <code>remocra.delegation_deci</code> table reference
     */
    public DelegationDeci(Name alias) {
        this(alias, DELEGATION_DECI);
    }

    private DelegationDeci(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private DelegationDeci(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Organisme REMOCRA de type \"COMMUNE\" délégant la compétence DECI à un organisme de type \"EPCI\""));
    }

    public <O extends Record> DelegationDeci(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, DELEGATION_DECI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DELEGATION_DECI_PKEY, Indexes.ORGANISME_COMMUNE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.DELEGATION_DECI_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.DELEGATION_DECI_PKEY, Keys.ORGANISME_COMMUNE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.DELEGATION_DECI__DELEGATION_DECI_COMMUNE_FK, Keys.DELEGATION_DECI__DELEGATION_DECI_EPCI_FK);
    }

    public Organisme delegationDeci_DelegationDeciCommuneFk() {
        return new Organisme(this, Keys.DELEGATION_DECI__DELEGATION_DECI_COMMUNE_FK);
    }

    public Organisme delegationDeci_DelegationDeciEpciFk() {
        return new Organisme(this, Keys.DELEGATION_DECI__DELEGATION_DECI_EPCI_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelegationDeci as(String alias) {
        return new DelegationDeci(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelegationDeci as(Name alias) {
        return new DelegationDeci(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DelegationDeci rename(String name) {
        return new DelegationDeci(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DelegationDeci rename(Name name) {
        return new DelegationDeci(name, null);
    }
}
