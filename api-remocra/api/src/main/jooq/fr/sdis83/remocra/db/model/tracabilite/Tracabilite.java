/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tracabilite;


import fr.sdis83.remocra.db.model.DefaultCatalog;
import fr.sdis83.remocra.db.model.tracabilite.tables.Hydrant;
import fr.sdis83.remocra.db.model.tracabilite.tables.HydrantVisite;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tracabilite extends SchemaImpl {

    private static final long serialVersionUID = 633276740;

    /**
     * The reference instance of <code>tracabilite</code>
     */
    public static final Tracabilite TRACABILITE = new Tracabilite();

    /**
     * The table <code>tracabilite.hydrant</code>.
     */
    public final Hydrant HYDRANT = fr.sdis83.remocra.db.model.tracabilite.tables.Hydrant.HYDRANT;

    /**
     * The table <code>tracabilite.hydrant_visite</code>.
     */
    public final HydrantVisite HYDRANT_VISITE = fr.sdis83.remocra.db.model.tracabilite.tables.HydrantVisite.HYDRANT_VISITE;

    /**
     * No further instances allowed
     */
    private Tracabilite() {
        super("tracabilite", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.HYDRANT_ID_SEQ,
            Sequences.HYDRANT_VISITE_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Hydrant.HYDRANT,
            HydrantVisite.HYDRANT_VISITE);
    }
}
