/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Table de liaison entre les crises et les interventions
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CriseIntervention extends TableImpl<Record> {

    private static final long serialVersionUID = -563251960;

    /**
     * The reference instance of <code>remocra.crise_intervention</code>
     */
    public static final CriseIntervention CRISE_INTERVENTION = new CriseIntervention();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.crise_intervention.crise</code>. Identifiant de la crise
     */
    public final TableField<Record, Long> CRISE = createField("crise", org.jooq.impl.SQLDataType.BIGINT, this, "Identifiant de la crise");

    /**
     * The column <code>remocra.crise_intervention.intervention</code>. Identifiant de l'intervention
     */
    public final TableField<Record, Long> INTERVENTION = createField("intervention", org.jooq.impl.SQLDataType.BIGINT, this, "Identifiant de l'intervention");

    /**
     * Create a <code>remocra.crise_intervention</code> table reference
     */
    public CriseIntervention() {
        this(DSL.name("crise_intervention"), null);
    }

    /**
     * Create an aliased <code>remocra.crise_intervention</code> table reference
     */
    public CriseIntervention(String alias) {
        this(DSL.name(alias), CRISE_INTERVENTION);
    }

    /**
     * Create an aliased <code>remocra.crise_intervention</code> table reference
     */
    public CriseIntervention(Name alias) {
        this(alias, CRISE_INTERVENTION);
    }

    private CriseIntervention(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private CriseIntervention(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Table de liaison entre les crises et les interventions"));
    }

    public <O extends Record> CriseIntervention(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, CRISE_INTERVENTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.CRISE_INTERVENTION__FK_CRISE_INTERVENTION_CRISE, Keys.CRISE_INTERVENTION__FK_CRISE_INTERVENTION_INTERVENTION);
    }

    public Crise crise() {
        return new Crise(this, Keys.CRISE_INTERVENTION__FK_CRISE_INTERVENTION_CRISE);
    }

    public Intervention intervention() {
        return new Intervention(this, Keys.CRISE_INTERVENTION__FK_CRISE_INTERVENTION_INTERVENTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CriseIntervention as(String alias) {
        return new CriseIntervention(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CriseIntervention as(Name alias) {
        return new CriseIntervention(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CriseIntervention rename(String name) {
        return new CriseIntervention(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CriseIntervention rename(Name name) {
        return new CriseIntervention(name, null);
    }
}
