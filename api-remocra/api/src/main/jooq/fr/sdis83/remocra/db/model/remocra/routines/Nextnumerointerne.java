/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.remocra.routines;


import fr.sdis83.remocra.db.model.remocra.Remocra;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Nextnumerointerne extends AbstractRoutine<Long> {

    private static final long serialVersionUID = -145290013;

    /**
     * The parameter <code>remocra.nextnumerointerne.RETURN_VALUE</code>.
     */
    public static final Parameter<Long> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>remocra.nextnumerointerne.idhydrant</code>.
     */
    public static final Parameter<Long> IDHYDRANT = Internal.createParameter("idhydrant", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>remocra.nextnumerointerne.idtypehydrant</code>.
     */
    public static final Parameter<Long> IDTYPEHYDRANT = Internal.createParameter("idtypehydrant", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>remocra.nextnumerointerne.idcommune</code>.
     */
    public static final Parameter<Long> IDCOMMUNE = Internal.createParameter("idcommune", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>remocra.nextnumerointerne.idzonespeciale</code>.
     */
    public static final Parameter<Long> IDZONESPECIALE = Internal.createParameter("idzonespeciale", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>remocra.nextnumerointerne.frombeginning</code>.
     */
    public static final Parameter<Boolean> FROMBEGINNING = Internal.createParameter("frombeginning", org.jooq.impl.SQLDataType.BOOLEAN, false, false);

    /**
     * Create a new routine call instance
     */
    public Nextnumerointerne() {
        super("nextnumerointerne", Remocra.REMOCRA, org.jooq.impl.SQLDataType.BIGINT);

        setReturnParameter(RETURN_VALUE);
        addInParameter(IDHYDRANT);
        addInParameter(IDTYPEHYDRANT);
        addInParameter(IDCOMMUNE);
        addInParameter(IDZONESPECIALE);
        addInParameter(FROMBEGINNING);
    }

    /**
     * Set the <code>idhydrant</code> parameter IN value to the routine
     */
    public void setIdhydrant(Long value) {
        setValue(IDHYDRANT, value);
    }

    /**
     * Set the <code>idhydrant</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public Nextnumerointerne setIdhydrant(Field<Long> field) {
        setField(IDHYDRANT, field);
        return this;
    }

    /**
     * Set the <code>idtypehydrant</code> parameter IN value to the routine
     */
    public void setIdtypehydrant(Long value) {
        setValue(IDTYPEHYDRANT, value);
    }

    /**
     * Set the <code>idtypehydrant</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public Nextnumerointerne setIdtypehydrant(Field<Long> field) {
        setField(IDTYPEHYDRANT, field);
        return this;
    }

    /**
     * Set the <code>idcommune</code> parameter IN value to the routine
     */
    public void setIdcommune(Long value) {
        setValue(IDCOMMUNE, value);
    }

    /**
     * Set the <code>idcommune</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public Nextnumerointerne setIdcommune(Field<Long> field) {
        setField(IDCOMMUNE, field);
        return this;
    }

    /**
     * Set the <code>idzonespeciale</code> parameter IN value to the routine
     */
    public void setIdzonespeciale(Long value) {
        setValue(IDZONESPECIALE, value);
    }

    /**
     * Set the <code>idzonespeciale</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public Nextnumerointerne setIdzonespeciale(Field<Long> field) {
        setField(IDZONESPECIALE, field);
        return this;
    }

    /**
     * Set the <code>frombeginning</code> parameter IN value to the routine
     */
    public void setFrombeginning(Boolean value) {
        setValue(FROMBEGINNING, value);
    }

    /**
     * Set the <code>frombeginning</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public Nextnumerointerne setFrombeginning(Field<Boolean> field) {
        setField(FROMBEGINNING, field);
        return this;
    }
}
