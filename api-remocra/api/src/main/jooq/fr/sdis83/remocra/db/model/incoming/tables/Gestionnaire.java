/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.incoming.tables;


import fr.sdis83.remocra.db.model.incoming.Incoming;
import fr.sdis83.remocra.db.model.incoming.Indexes;
import fr.sdis83.remocra.db.model.incoming.Keys;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Gestionnaire extends TableImpl<Record> {

    private static final long serialVersionUID = -949132064;

    /**
     * The reference instance of <code>incoming.gestionnaire</code>
     */
    public static final Gestionnaire GESTIONNAIRE = new Gestionnaire();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>incoming.gestionnaire.id_gestionnaire</code>.
     */
    public final TableField<Record, UUID> ID_GESTIONNAIRE = createField("id_gestionnaire", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>incoming.gestionnaire.id_gestionnaire_remocra</code>.
     */
    public final TableField<Record, Long> ID_GESTIONNAIRE_REMOCRA = createField("id_gestionnaire_remocra", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>incoming.gestionnaire.nom_gestionnaire</code>.
     */
    public final TableField<Record, String> NOM_GESTIONNAIRE = createField("nom_gestionnaire", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>incoming.gestionnaire.code_gestionnaire</code>.
     */
    public final TableField<Record, String> CODE_GESTIONNAIRE = createField("code_gestionnaire", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>incoming.gestionnaire</code> table reference
     */
    public Gestionnaire() {
        this(DSL.name("gestionnaire"), null);
    }

    /**
     * Create an aliased <code>incoming.gestionnaire</code> table reference
     */
    public Gestionnaire(String alias) {
        this(DSL.name(alias), GESTIONNAIRE);
    }

    /**
     * Create an aliased <code>incoming.gestionnaire</code> table reference
     */
    public Gestionnaire(Name alias) {
        this(alias, GESTIONNAIRE);
    }

    private Gestionnaire(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Gestionnaire(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Gestionnaire(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, GESTIONNAIRE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Incoming.INCOMING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GESTIONNAIRE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.GESTIONNAIRE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.GESTIONNAIRE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Gestionnaire as(String alias) {
        return new Gestionnaire(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Gestionnaire as(Name alias) {
        return new Gestionnaire(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Gestionnaire rename(String name) {
        return new Gestionnaire(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Gestionnaire rename(Name name) {
        return new Gestionnaire(name, null);
    }
}
