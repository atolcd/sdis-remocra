/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Droit extends TableImpl<Record> {

    private static final long serialVersionUID = -1311737732;

    /**
     * The reference instance of <code>remocra.droit</code>
     */
    public static final Droit DROIT = new Droit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.droit.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.droit_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>remocra.droit.version</code>.
     */
    public final TableField<Record, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>remocra.droit.profil_droit</code>.
     */
    public final TableField<Record, Long> PROFIL_DROIT = createField("profil_droit", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.droit.type_droit</code>.
     */
    public final TableField<Record, Long> TYPE_DROIT = createField("type_droit", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>remocra.droit</code> table reference
     */
    public Droit() {
        this(DSL.name("droit"), null);
    }

    /**
     * Create an aliased <code>remocra.droit</code> table reference
     */
    public Droit(String alias) {
        this(DSL.name(alias), DROIT);
    }

    /**
     * Create an aliased <code>remocra.droit</code> table reference
     */
    public Droit(Name alias) {
        this(alias, DROIT);
    }

    private Droit(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Droit(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Droit(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, DROIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DROIT_PKEY, Indexes.DROIT_PROFIL_DROIT_TYPE_DROIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_DROIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.DROIT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.DROIT_PKEY, Keys.DROIT_PROFIL_DROIT_TYPE_DROIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.DROIT__FK5B6AE8C3723A725, Keys.DROIT__FK5B6AE8C12DB1A65);
    }

    public ProfilDroit profilDroit() {
        return new ProfilDroit(this, Keys.DROIT__FK5B6AE8C3723A725);
    }

    public TypeDroit typeDroit() {
        return new TypeDroit(this, Keys.DROIT__FK5B6AE8C12DB1A65);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Droit as(String alias) {
        return new Droit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Droit as(Name alias) {
        return new Droit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Droit rename(String name) {
        return new Droit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Droit rename(Name name) {
        return new Droit(name, null);
    }
}
