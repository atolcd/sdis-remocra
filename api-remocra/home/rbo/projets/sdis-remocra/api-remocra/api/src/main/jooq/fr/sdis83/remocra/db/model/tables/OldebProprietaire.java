/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Propriétaire de parcelles soumises à obligation légale de débroussaillement
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OldebProprietaire extends TableImpl<Record> {

    private static final long serialVersionUID = 113762201;

    /**
     * The reference instance of <code>remocra.oldeb_proprietaire</code>
     */
    public static final OldebProprietaire OLDEB_PROPRIETAIRE = new OldebProprietaire();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.oldeb_proprietaire.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.oldeb_proprietaire_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.organisme</code>.
     */
    public final TableField<Record, Boolean> ORGANISME = createField("organisme", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.raison_sociale</code>.
     */
    public final TableField<Record, String> RAISON_SOCIALE = createField("raison_sociale", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.civilite</code>.
     */
    public final TableField<Record, String> CIVILITE = createField("civilite", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.nom</code>.
     */
    public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.prenom</code>.
     */
    public final TableField<Record, String> PRENOM = createField("prenom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.telephone</code>.
     */
    public final TableField<Record, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.email</code>.
     */
    public final TableField<Record, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.num_voie</code>.
     */
    public final TableField<Record, String> NUM_VOIE = createField("num_voie", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.voie</code>.
     */
    public final TableField<Record, String> VOIE = createField("voie", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.lieu_dit</code>.
     */
    public final TableField<Record, String> LIEU_DIT = createField("lieu_dit", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.code_postal</code>.
     */
    public final TableField<Record, String> CODE_POSTAL = createField("code_postal", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.ville</code>.
     */
    public final TableField<Record, String> VILLE = createField("ville", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>remocra.oldeb_proprietaire.pays</code>.
     */
    public final TableField<Record, String> PAYS = createField("pays", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>remocra.oldeb_proprietaire</code> table reference
     */
    public OldebProprietaire() {
        this(DSL.name("oldeb_proprietaire"), null);
    }

    /**
     * Create an aliased <code>remocra.oldeb_proprietaire</code> table reference
     */
    public OldebProprietaire(String alias) {
        this(DSL.name(alias), OLDEB_PROPRIETAIRE);
    }

    /**
     * Create an aliased <code>remocra.oldeb_proprietaire</code> table reference
     */
    public OldebProprietaire(Name alias) {
        this(alias, OLDEB_PROPRIETAIRE);
    }

    private OldebProprietaire(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private OldebProprietaire(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Propriétaire de parcelles soumises à obligation légale de débroussaillement"));
    }

    public <O extends Record> OldebProprietaire(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, OLDEB_PROPRIETAIRE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.OLDEB_PROPRIETAIRE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_OLDEB_PROPRIETAIRE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.OLDEB_PROPRIETAIRE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.OLDEB_PROPRIETAIRE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OldebProprietaire as(String alias) {
        return new OldebProprietaire(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OldebProprietaire as(Name alias) {
        return new OldebProprietaire(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OldebProprietaire rename(String name) {
        return new OldebProprietaire(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OldebProprietaire rename(Name name) {
        return new OldebProprietaire(name, null);
    }
}
