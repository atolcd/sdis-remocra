/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Gestion de crise : modèle de message à utiliser pour le suivi de crise. 
 * Utilisé notament par REMOCRA dans le cadre de la création automatique de 
 * messages suite à des actions utilisateurs
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CriseSuiviMessageModele extends TableImpl<Record> {

    private static final long serialVersionUID = -1279653683;

    /**
     * The reference instance of <code>remocra.crise_suivi_message_modele</code>
     */
    public static final CriseSuiviMessageModele CRISE_SUIVI_MESSAGE_MODELE = new CriseSuiviMessageModele();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.crise_suivi_message_modele.id</code>. Identifiant interne
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('remocra.crise_suivi_message_modele_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "Identifiant interne");

    /**
     * The column <code>remocra.crise_suivi_message_modele.actif</code>. Sélectionnable dans l'interface ou exploitable par le système
     */
    public final TableField<Record, Boolean> ACTIF = createField("actif", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "Sélectionnable dans l'interface ou exploitable par le système");

    /**
     * The column <code>remocra.crise_suivi_message_modele.code</code>. Code permettant une utilisation applicative ou lors d'échanges
     */
    public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Code permettant une utilisation applicative ou lors d'échanges");

    /**
     * The column <code>remocra.crise_suivi_message_modele.corps</code>. Modèle de message à appliquer. Peut contenir des variables sous la forme [NOM_DE_VARIABLE] exploitées par le système
     */
    public final TableField<Record, String> CORPS = createField("corps", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Modèle de message à appliquer. Peut contenir des variables sous la forme [NOM_DE_VARIABLE] exploitées par le système");

    /**
     * The column <code>remocra.crise_suivi_message_modele.objet</code>. Titre de message à appliquer. Peut contenir des  variables sous la forme [NOM_DE_VARIABLE] exploitées par le système
     */
    public final TableField<Record, String> OBJET = createField("objet", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Titre de message à appliquer. Peut contenir des  variables sous la forme [NOM_DE_VARIABLE] exploitées par le système");

    /**
     * The column <code>remocra.crise_suivi_message_modele.importance</code>. Importance par défaut dans la table de suivi
     */
    public final TableField<Record, Long> IMPORTANCE = createField("importance", org.jooq.impl.SQLDataType.BIGINT, this, "Importance par défaut dans la table de suivi");

    /**
     * The column <code>remocra.crise_suivi_message_modele.tags</code>. Liste des tags associés par défaut
     */
    public final TableField<Record, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR, this, "Liste des tags associés par défaut");

    /**
     * Create a <code>remocra.crise_suivi_message_modele</code> table reference
     */
    public CriseSuiviMessageModele() {
        this(DSL.name("crise_suivi_message_modele"), null);
    }

    /**
     * Create an aliased <code>remocra.crise_suivi_message_modele</code> table reference
     */
    public CriseSuiviMessageModele(String alias) {
        this(DSL.name(alias), CRISE_SUIVI_MESSAGE_MODELE);
    }

    /**
     * Create an aliased <code>remocra.crise_suivi_message_modele</code> table reference
     */
    public CriseSuiviMessageModele(Name alias) {
        this(alias, CRISE_SUIVI_MESSAGE_MODELE);
    }

    private CriseSuiviMessageModele(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private CriseSuiviMessageModele(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Gestion de crise : modèle de message à utiliser pour le suivi de crise. Utilisé notament par REMOCRA dans le cadre de la création automatique de messages suite à des actions utilisateurs"));
    }

    public <O extends Record> CriseSuiviMessageModele(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, CRISE_SUIVI_MESSAGE_MODELE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRISE_SUIVI_MESSAGE_MODELE_CODE_KEY, Indexes.CRISE_SUIVI_MESSAGE_MODELE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_CRISE_SUIVI_MESSAGE_MODELE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.CRISE_SUIVI_MESSAGE_MODELE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.CRISE_SUIVI_MESSAGE_MODELE_PKEY, Keys.CRISE_SUIVI_MESSAGE_MODELE_CODE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CriseSuiviMessageModele as(String alias) {
        return new CriseSuiviMessageModele(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CriseSuiviMessageModele as(Name alias) {
        return new CriseSuiviMessageModele(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CriseSuiviMessageModele rename(String name) {
        return new CriseSuiviMessageModele(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CriseSuiviMessageModele rename(Name name) {
        return new CriseSuiviMessageModele(name, null);
    }
}
