/*
 * This file is generated by jOOQ.
 */
package fr.sdis83.remocra.db.model.tables;


import fr.sdis83.remocra.db.model.Indexes;
import fr.sdis83.remocra.db.model.Keys;
import fr.sdis83.remocra.db.model.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeHydrantAnomalieNatureSaisies extends TableImpl<Record> {

    private static final long serialVersionUID = -2060525152;

    /**
     * The reference instance of <code>remocra.type_hydrant_anomalie_nature_saisies</code>
     */
    public static final TypeHydrantAnomalieNatureSaisies TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES = new TypeHydrantAnomalieNatureSaisies();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>remocra.type_hydrant_anomalie_nature_saisies.type_hydrant_anomalie_nature</code>.
     */
    public final TableField<Record, Long> TYPE_HYDRANT_ANOMALIE_NATURE = createField("type_hydrant_anomalie_nature", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>remocra.type_hydrant_anomalie_nature_saisies.saisies</code>.
     */
    public final TableField<Record, Long> SAISIES = createField("saisies", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>remocra.type_hydrant_anomalie_nature_saisies</code> table reference
     */
    public TypeHydrantAnomalieNatureSaisies() {
        this(DSL.name("type_hydrant_anomalie_nature_saisies"), null);
    }

    /**
     * Create an aliased <code>remocra.type_hydrant_anomalie_nature_saisies</code> table reference
     */
    public TypeHydrantAnomalieNatureSaisies(String alias) {
        this(DSL.name(alias), TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES);
    }

    /**
     * Create an aliased <code>remocra.type_hydrant_anomalie_nature_saisies</code> table reference
     */
    public TypeHydrantAnomalieNatureSaisies(Name alias) {
        this(alias, TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES);
    }

    private TypeHydrantAnomalieNatureSaisies(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private TypeHydrantAnomalieNatureSaisies(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TypeHydrantAnomalieNatureSaisies(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remocra.REMOCRA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES__FKD67208386BCEB98B, Keys.TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES__FKD6720838873AEDCD);
    }

    public TypeHydrantAnomalieNature typeHydrantAnomalieNature() {
        return new TypeHydrantAnomalieNature(this, Keys.TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES__FKD67208386BCEB98B);
    }

    public TypeHydrantSaisie typeHydrantSaisie() {
        return new TypeHydrantSaisie(this, Keys.TYPE_HYDRANT_ANOMALIE_NATURE_SAISIES__FKD6720838873AEDCD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeHydrantAnomalieNatureSaisies as(String alias) {
        return new TypeHydrantAnomalieNatureSaisies(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeHydrantAnomalieNatureSaisies as(Name alias) {
        return new TypeHydrantAnomalieNatureSaisies(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TypeHydrantAnomalieNatureSaisies rename(String name) {
        return new TypeHydrantAnomalieNatureSaisies(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TypeHydrantAnomalieNatureSaisies rename(Name name) {
        return new TypeHydrantAnomalieNatureSaisies(name, null);
    }
}
