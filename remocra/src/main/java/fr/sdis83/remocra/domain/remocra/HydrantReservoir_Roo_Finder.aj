// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fr.sdis83.remocra.domain.remocra;

import fr.sdis83.remocra.domain.remocra.HydrantReservoir;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect HydrantReservoir_Roo_Finder {

    public static Long HydrantReservoir.countFindHydrantReservoirsByCapacite(Integer capacite) {
        if (capacite == null) throw new IllegalArgumentException("The capacite argument is required");
        EntityManager em = HydrantReservoir.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM HydrantReservoir AS o WHERE o.capacite = :capacite", Long.class);
        q.setParameter("capacite", capacite);
        return ((Long) q.getSingleResult());
    }

    public static Long HydrantReservoir.countFindHydrantReservoirsByNom(String nom) {
        if (nom == null || nom.length() == 0) throw new IllegalArgumentException("The nom argument is required");
        EntityManager em = HydrantReservoir.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM HydrantReservoir AS o WHERE o.nom = :nom", Long.class);
        q.setParameter("nom", nom);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<HydrantReservoir> HydrantReservoir.findHydrantReservoirsByCapacite(Integer capacite) {
        if (capacite == null) throw new IllegalArgumentException("The capacite argument is required");
        EntityManager em = HydrantReservoir.entityManager();
        TypedQuery<HydrantReservoir> q = em.createQuery("SELECT o FROM HydrantReservoir AS o WHERE o.capacite = :capacite", HydrantReservoir.class);
        q.setParameter("capacite", capacite);
        return q;
    }


}
