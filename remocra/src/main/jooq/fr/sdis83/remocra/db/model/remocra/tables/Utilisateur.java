/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Utilisateur extends TableImpl<Record> {

	private static final long serialVersionUID = 214301308;

	/**
	 * The reference instance of <code>remocra.utilisateur</code>
	 */
	public static final Utilisateur UTILISATEUR = new Utilisateur();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.utilisateur.id</code>.
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.utilisateur.actif</code>.
	 */
	public final TableField<Record, Boolean> ACTIF = createField("actif", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.utilisateur.email</code>.
	 */
	public final TableField<Record, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.utilisateur.identifiant</code>.
	 */
	public final TableField<Record, String> IDENTIFIANT = createField("identifiant", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.utilisateur.message_remocra</code>.
	 */
	public final TableField<Record, Boolean> MESSAGE_REMOCRA = createField("message_remocra", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.utilisateur.nom</code>.
	 */
	public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.utilisateur.password</code>.
	 */
	public final TableField<Record, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.utilisateur.prenom</code>.
	 */
	public final TableField<Record, String> PRENOM = createField("prenom", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.utilisateur.salt</code>.
	 */
	public final TableField<Record, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.utilisateur.telephone</code>.
	 */
	public final TableField<Record, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.utilisateur.version</code>.
	 */
	public final TableField<Record, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>remocra.utilisateur.organisme</code>.
	 */
	public final TableField<Record, Long> ORGANISME = createField("organisme", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>remocra.utilisateur.profil_utilisateur</code>.
	 */
	public final TableField<Record, Long> PROFIL_UTILISATEUR = createField("profil_utilisateur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>remocra.utilisateur.derniere_connexion</code>. Date de dernière connexion de l'utilisateur
	 */
	public final TableField<Record, Instant> DERNIERE_CONNEXION = createField("derniere_connexion", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de dernière connexion de l'utilisateur", new InstantConverter());

	/**
	 * Create a <code>remocra.utilisateur</code> table reference
	 */
	public Utilisateur() {
		this("utilisateur", null);
	}

	/**
	 * Create an aliased <code>remocra.utilisateur</code> table reference
	 */
	public Utilisateur(String alias) {
		this(alias, UTILISATEUR);
	}

	private Utilisateur(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Utilisateur(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_UTILISATEUR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.UTILISATEUR_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.UTILISATEUR_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.UTILISATEUR__FKDD163383374ADD52, Keys.UTILISATEUR__FKDD1633832343353);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Utilisateur as(String alias) {
		return new Utilisateur(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Utilisateur rename(String name) {
		return new Utilisateur(name, null);
	}
}
