/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Document généré par un processus ETL et mis à disposition d'un destinataire
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessusEtlDocument extends TableImpl<Record> {

	private static final long serialVersionUID = -1628515741;

	/**
	 * The reference instance of <code>remocra.processus_etl_document</code>
	 */
	public static final ProcessusEtlDocument PROCESSUS_ETL_DOCUMENT = new ProcessusEtlDocument();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.processus_etl_document.id</code>. Identifiant interne
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne");

	/**
	 * The column <code>remocra.processus_etl_document.document</code>. Référence au document
	 */
	public final TableField<Record, Long> DOCUMENT = createField("document", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Référence au document");

	/**
	 * The column <code>remocra.processus_etl_document.processus</code>. Référence au processus à l'origine de création du document
	 */
	public final TableField<Record, Long> PROCESSUS = createField("processus", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Référence au processus à l'origine de création du document");

	/**
	 * The column <code>remocra.processus_etl_document.code</code>. Code unique exploité pour l'accusé de téléchargement
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false).defaulted(true), this, "Code unique exploité pour l'accusé de téléchargement");

	/**
	 * The column <code>remocra.processus_etl_document.nom_destinataire</code>. Indication sur le destinataire du document
	 */
	public final TableField<Record, String> NOM_DESTINATAIRE = createField("nom_destinataire", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Indication sur le destinataire du document");

	/**
	 * The column <code>remocra.processus_etl_document.type_destinataire</code>. Indication sur le type de destinataire du courrier. Organisme = ORGANISME, utilisateur = UTILISATEUR, autre = AUTRE
	 */
	public final TableField<Record, String> TYPE_DESTINATAIRE = createField("type_destinataire", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Indication sur le type de destinataire du courrier. Organisme = ORGANISME, utilisateur = UTILISATEUR, autre = AUTRE");

	/**
	 * The column <code>remocra.processus_etl_document.id_destinataire</code>. Identifiant du destinataire du document dans la base Remocra quand le type = ORGANISME ou UTILISATEUR
	 */
	public final TableField<Record, String> ID_DESTINATAIRE = createField("id_destinataire", org.jooq.impl.SQLDataType.VARCHAR, this, "Identifiant du destinataire du document dans la base Remocra quand le type = ORGANISME ou UTILISATEUR");

	/**
	 * The column <code>remocra.processus_etl_document.accuse</code>. Date et heure d'accusé de téléchargement
	 */
	public final TableField<Record, Instant> ACCUSE = createField("accuse", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date et heure d'accusé de téléchargement", new InstantConverter());

	/**
	 * Create a <code>remocra.processus_etl_document</code> table reference
	 */
	public ProcessusEtlDocument() {
		this("processus_etl_document", null);
	}

	/**
	 * Create an aliased <code>remocra.processus_etl_document</code> table reference
	 */
	public ProcessusEtlDocument(String alias) {
		this(alias, PROCESSUS_ETL_DOCUMENT);
	}

	private ProcessusEtlDocument(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private ProcessusEtlDocument(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Document généré par un processus ETL et mis à disposition d'un destinataire");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_PROCESSUS_ETL_DOCUMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.PROCESSUS_ETL_DOCUMENT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.PROCESSUS_ETL_DOCUMENT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.PROCESSUS_ETL_DOCUMENT__PROCESSUS_ETL_DOCUMENT_DOCUMENT_FK, Keys.PROCESSUS_ETL_DOCUMENT__PROCESSUS_ETL_DOCUMENT_PROCESSUS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessusEtlDocument as(String alias) {
		return new ProcessusEtlDocument(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProcessusEtlDocument rename(String name) {
		return new ProcessusEtlDocument(name, null);
	}
}
