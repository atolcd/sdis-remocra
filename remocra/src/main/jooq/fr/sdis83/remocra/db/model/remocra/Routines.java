/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra;


import fr.sdis83.remocra.db.model.remocra.routines.CalculDebitPression;
import fr.sdis83.remocra.db.model.remocra.routines.CalculDebitPressionTestAncien;
import fr.sdis83.remocra.db.model.remocra.routines.CalculDebitPressionTestNouveau;
import fr.sdis83.remocra.db.model.remocra.routines.CalculIndispo;
import fr.sdis83.remocra.db.model.remocra.routines.JaroWinkler;
import fr.sdis83.remocra.db.model.remocra.routines.Nextnumerointerne;
import fr.sdis83.remocra.db.model.remocra.routines.SoundexFr;
import fr.sdis83.remocra.db.model.remocra.routines.TrgCalculDebitPression;
import fr.sdis83.remocra.db.model.remocra.routines.TrgCalculIndispo;
import fr.sdis83.remocra.db.model.remocra.routines.TrgCrise;
import fr.sdis83.remocra.db.model.remocra.routines.TrgCriseDocument;
import fr.sdis83.remocra.db.model.remocra.routines.TrgCriseEvenement;
import fr.sdis83.remocra.db.model.remocra.routines.UpdateAllIndispo;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;


/**
 * Convenience access to all stored procedures and functions in remocra
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

	/**
	 * Call <code>remocra.calcul_debit_pression</code>
	 */
	public static void calculDebitPression(Configuration configuration, Long idHydrant) {
		CalculDebitPression p = new CalculDebitPression();
		p.setIdHydrant(idHydrant);

		p.execute(configuration);
	}

	/**
	 * Call <code>remocra.calcul_debit_pression_test_ancien</code>
	 */
	public static String calculDebitPressionTestAncien(Configuration configuration, Long idHydrant) {
		CalculDebitPressionTestAncien f = new CalculDebitPressionTestAncien();
		f.setIdHydrant(idHydrant);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.calcul_debit_pression_test_ancien</code> as a field
	 */
	public static Field<String> calculDebitPressionTestAncien(Long idHydrant) {
		CalculDebitPressionTestAncien f = new CalculDebitPressionTestAncien();
		f.setIdHydrant(idHydrant);

		return f.asField();
	}

	/**
	 * Get <code>remocra.calcul_debit_pression_test_ancien</code> as a field
	 */
	public static Field<String> calculDebitPressionTestAncien(Field<Long> idHydrant) {
		CalculDebitPressionTestAncien f = new CalculDebitPressionTestAncien();
		f.setIdHydrant(idHydrant);

		return f.asField();
	}

	/**
	 * Call <code>remocra.calcul_debit_pression_test_nouveau</code>
	 */
	public static String calculDebitPressionTestNouveau(Configuration configuration, Long idHydrant) {
		CalculDebitPressionTestNouveau f = new CalculDebitPressionTestNouveau();
		f.setIdHydrant(idHydrant);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.calcul_debit_pression_test_nouveau</code> as a field
	 */
	public static Field<String> calculDebitPressionTestNouveau(Long idHydrant) {
		CalculDebitPressionTestNouveau f = new CalculDebitPressionTestNouveau();
		f.setIdHydrant(idHydrant);

		return f.asField();
	}

	/**
	 * Get <code>remocra.calcul_debit_pression_test_nouveau</code> as a field
	 */
	public static Field<String> calculDebitPressionTestNouveau(Field<Long> idHydrant) {
		CalculDebitPressionTestNouveau f = new CalculDebitPressionTestNouveau();
		f.setIdHydrant(idHydrant);

		return f.asField();
	}

	/**
	 * Call <code>remocra.calcul_indispo</code>
	 */
	public static void calculIndispo(Configuration configuration, Long idHydrant) {
		CalculIndispo p = new CalculIndispo();
		p.setIdHydrant(idHydrant);

		p.execute(configuration);
	}

	/**
	 * Call <code>remocra.jaro_winkler</code>
	 */
	public static Double jaroWinkler(Configuration configuration, String str1In, String str2In) {
		JaroWinkler f = new JaroWinkler();
		f.setStr1In(str1In);
		f.setStr2In(str2In);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.jaro_winkler</code> as a field
	 */
	public static Field<Double> jaroWinkler(String str1In, String str2In) {
		JaroWinkler f = new JaroWinkler();
		f.setStr1In(str1In);
		f.setStr2In(str2In);

		return f.asField();
	}

	/**
	 * Get <code>remocra.jaro_winkler</code> as a field
	 */
	public static Field<Double> jaroWinkler(Field<String> str1In, Field<String> str2In) {
		JaroWinkler f = new JaroWinkler();
		f.setStr1In(str1In);
		f.setStr2In(str2In);

		return f.asField();
	}

	/**
	 * Call <code>remocra.nextnumerointerne</code>
	 */
	public static Long nextnumerointerne(Configuration configuration, Long idhydrant, Long idtypehydrant, Long idcommune, Long idzonespeciale, Boolean frombeginning) {
		Nextnumerointerne f = new Nextnumerointerne();
		f.setIdhydrant(idhydrant);
		f.setIdtypehydrant(idtypehydrant);
		f.setIdcommune(idcommune);
		f.setIdzonespeciale(idzonespeciale);
		f.setFrombeginning(frombeginning);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.nextnumerointerne</code> as a field
	 */
	public static Field<Long> nextnumerointerne(Long idhydrant, Long idtypehydrant, Long idcommune, Long idzonespeciale, Boolean frombeginning) {
		Nextnumerointerne f = new Nextnumerointerne();
		f.setIdhydrant(idhydrant);
		f.setIdtypehydrant(idtypehydrant);
		f.setIdcommune(idcommune);
		f.setIdzonespeciale(idzonespeciale);
		f.setFrombeginning(frombeginning);

		return f.asField();
	}

	/**
	 * Get <code>remocra.nextnumerointerne</code> as a field
	 */
	public static Field<Long> nextnumerointerne(Field<Long> idhydrant, Field<Long> idtypehydrant, Field<Long> idcommune, Field<Long> idzonespeciale, Field<Boolean> frombeginning) {
		Nextnumerointerne f = new Nextnumerointerne();
		f.setIdhydrant(idhydrant);
		f.setIdtypehydrant(idtypehydrant);
		f.setIdcommune(idcommune);
		f.setIdzonespeciale(idzonespeciale);
		f.setFrombeginning(frombeginning);

		return f.asField();
	}

	/**
	 * Call <code>remocra.soundex_fr</code>
	 */
	public static String soundexFr(Configuration configuration, String __1) {
		SoundexFr f = new SoundexFr();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.soundex_fr</code> as a field
	 */
	public static Field<String> soundexFr(String __1) {
		SoundexFr f = new SoundexFr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get <code>remocra.soundex_fr</code> as a field
	 */
	public static Field<String> soundexFr(Field<String> __1) {
		SoundexFr f = new SoundexFr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call <code>remocra.trg_calcul_debit_pression</code>
	 */
	public static Object trgCalculDebitPression(Configuration configuration) {
		TrgCalculDebitPression f = new TrgCalculDebitPression();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.trg_calcul_debit_pression</code> as a field
	 */
	public static Field<Object> trgCalculDebitPression() {
		TrgCalculDebitPression f = new TrgCalculDebitPression();

		return f.asField();
	}

	/**
	 * Call <code>remocra.trg_calcul_indispo</code>
	 */
	public static Object trgCalculIndispo(Configuration configuration) {
		TrgCalculIndispo f = new TrgCalculIndispo();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.trg_calcul_indispo</code> as a field
	 */
	public static Field<Object> trgCalculIndispo() {
		TrgCalculIndispo f = new TrgCalculIndispo();

		return f.asField();
	}

	/**
	 * Call <code>remocra.trg_crise</code>
	 */
	public static Object trgCrise(Configuration configuration) {
		TrgCrise f = new TrgCrise();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.trg_crise</code> as a field
	 */
	public static Field<Object> trgCrise() {
		TrgCrise f = new TrgCrise();

		return f.asField();
	}

	/**
	 * Call <code>remocra.trg_crise_document</code>
	 */
	public static Object trgCriseDocument(Configuration configuration) {
		TrgCriseDocument f = new TrgCriseDocument();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.trg_crise_document</code> as a field
	 */
	public static Field<Object> trgCriseDocument() {
		TrgCriseDocument f = new TrgCriseDocument();

		return f.asField();
	}

	/**
	 * Call <code>remocra.trg_crise_evenement</code>
	 */
	public static Object trgCriseEvenement(Configuration configuration) {
		TrgCriseEvenement f = new TrgCriseEvenement();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.trg_crise_evenement</code> as a field
	 */
	public static Field<Object> trgCriseEvenement() {
		TrgCriseEvenement f = new TrgCriseEvenement();

		return f.asField();
	}

	/**
	 * Call <code>remocra.update_all_indispo</code>
	 */
	public static String updateAllIndispo(Configuration configuration) {
		UpdateAllIndispo f = new UpdateAllIndispo();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>remocra.update_all_indispo</code> as a field
	 */
	public static Field<String> updateAllIndispo() {
		UpdateAllIndispo f = new UpdateAllIndispo();

		return f.asField();
	}
}
