/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.pdi.tables;


import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.pdi.Keys;
import fr.sdis83.remocra.db.model.pdi.Pdi;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Traitement extends TableImpl<Record> {

	private static final long serialVersionUID = 2089301656;

	/**
	 * The reference instance of <code>pdi.traitement</code>
	 */
	public static final Traitement TRAITEMENT = new Traitement();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>pdi.traitement.idtraitement</code>.
	 */
	public final TableField<Record, Integer> IDTRAITEMENT = createField("idtraitement", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>pdi.traitement.demande</code>.
	 */
	public final TableField<Record, Instant> DEMANDE = createField("demande", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new InstantConverter());

	/**
	 * The column <code>pdi.traitement.execution</code>.
	 */
	public final TableField<Record, Instant> EXECUTION = createField("execution", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new InstantConverter());

	/**
	 * The column <code>pdi.traitement.idutilisateur</code>.
	 */
	public final TableField<Record, Integer> IDUTILISATEUR = createField("idutilisateur", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>pdi.traitement.urlressource</code>.
	 */
	public final TableField<Record, String> URLRESSOURCE = createField("urlressource", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>pdi.traitement.idmodele</code>.
	 */
	public final TableField<Record, Integer> IDMODELE = createField("idmodele", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>pdi.traitement.idstatut</code>.
	 */
	public final TableField<Record, Integer> IDSTATUT = createField("idstatut", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>pdi.traitement</code> table reference
	 */
	public Traitement() {
		this("traitement", null);
	}

	/**
	 * Create an aliased <code>pdi.traitement</code> table reference
	 */
	public Traitement(String alias) {
		this(alias, TRAITEMENT);
	}

	private Traitement(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Traitement(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Pdi.PDI, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Integer> getIdentity() {
		return Keys.IDENTITY_TRAITEMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.TRAITEMENT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.TRAITEMENT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.TRAITEMENT__FK923581F54675AFA4, Keys.TRAITEMENT__FK923581F57CD7AABD);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Traitement as(String alias) {
		return new Traitement(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Traitement rename(String name) {
		return new Traitement(name, null);
	}
}
