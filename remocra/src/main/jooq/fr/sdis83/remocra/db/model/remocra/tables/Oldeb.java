/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import com.vividsolutions.jts.geom.Geometry;

import fr.sdis83.remocra.db.converter.GeometryBinding;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Informations relatives à une parcelle sousmise à une obligation légale 
 * de débroussaillement
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oldeb extends TableImpl<Record> {

	private static final long serialVersionUID = -1913748279;

	/**
	 * The reference instance of <code>remocra.oldeb</code>
	 */
	public static final Oldeb OLDEB = new Oldeb();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.oldeb.id</code>.
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.oldeb.geometrie</code>. Géometrie de l'oldeb
	 */
	public final TableField<Record, Geometry> GEOMETRIE = createField("geometrie", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "Géometrie de l'oldeb", new GeometryBinding());

	/**
	 * The column <code>remocra.oldeb.section</code>. Numero de section rattachée à l'oldeb
	 */
	public final TableField<Record, String> SECTION = createField("section", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Numero de section rattachée à l'oldeb");

	/**
	 * The column <code>remocra.oldeb.parcelle</code>. Numéro d'identification de la parcelle rattachée à l'oldeb
	 */
	public final TableField<Record, String> PARCELLE = createField("parcelle", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Numéro d'identification de la parcelle rattachée à l'oldeb");

	/**
	 * The column <code>remocra.oldeb.num_voie</code>.
	 */
	public final TableField<Record, String> NUM_VOIE = createField("num_voie", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.oldeb.voie</code>.
	 */
	public final TableField<Record, String> VOIE = createField("voie", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.oldeb.lieu_dit</code>.
	 */
	public final TableField<Record, String> LIEU_DIT = createField("lieu_dit", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.oldeb.volume</code>.
	 */
	public final TableField<Record, Integer> VOLUME = createField("volume", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.oldeb.largeur_acces</code>.
	 */
	public final TableField<Record, Integer> LARGEUR_ACCES = createField("largeur_acces", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>remocra.oldeb.portail_electrique</code>.
	 */
	public final TableField<Record, Boolean> PORTAIL_ELECTRIQUE = createField("portail_electrique", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.oldeb.code_portail</code>.
	 */
	public final TableField<Record, String> CODE_PORTAIL = createField("code_portail", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.oldeb.actif</code>. Determine si l'oldeb est actif ou non
	 */
	public final TableField<Record, Boolean> ACTIF = createField("actif", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this, "Determine si l'oldeb est actif ou non");

	/**
	 * The column <code>remocra.oldeb.commune</code>. Identifiant de correspondance avec la commune rattachée à l'oldeb
	 */
	public final TableField<Record, Long> COMMUNE = createField("commune", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant de correspondance avec la commune rattachée à l'oldeb");

	/**
	 * The column <code>remocra.oldeb.zone_urbanisme</code>.
	 */
	public final TableField<Record, Long> ZONE_URBANISME = createField("zone_urbanisme", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>remocra.oldeb.acces</code>.
	 */
	public final TableField<Record, Long> ACCES = createField("acces", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>remocra.oldeb</code> table reference
	 */
	public Oldeb() {
		this("oldeb", null);
	}

	/**
	 * Create an aliased <code>remocra.oldeb</code> table reference
	 */
	public Oldeb(String alias) {
		this(alias, OLDEB);
	}

	private Oldeb(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Oldeb(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Informations relatives à une parcelle sousmise à une obligation légale de débroussaillement");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_OLDEB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.OLDEB_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.OLDEB_PKEY, Keys.UK_OLDEB_COMMUNE_SECTION_PARCELLE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.OLDEB__FK_OLDEB_COMMUNE, Keys.OLDEB__FK_OLDEB_ZONE_URBANISME, Keys.OLDEB__FK_OLDEB_ACCES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Oldeb as(String alias) {
		return new Oldeb(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Oldeb rename(String name) {
		return new Oldeb(name, null);
	}
}
