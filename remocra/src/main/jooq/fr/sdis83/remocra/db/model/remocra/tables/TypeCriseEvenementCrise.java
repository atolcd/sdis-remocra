/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Catégorie d'évènement mobilisable pour un type de crise
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeCriseEvenementCrise extends TableImpl<Record> {

	private static final long serialVersionUID = -1901504254;

	/**
	 * The reference instance of <code>remocra.type_crise_evenement_crise</code>
	 */
	public static final TypeCriseEvenementCrise TYPE_CRISE_EVENEMENT_CRISE = new TypeCriseEvenementCrise();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.type_crise_evenement_crise.categorie_evenement</code>. Identifiant de la catégorie d'évènement
	 */
	public final TableField<Record, Long> CATEGORIE_EVENEMENT = createField("categorie_evenement", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant de la catégorie d'évènement");

	/**
	 * The column <code>remocra.type_crise_evenement_crise.type_crise</code>. Identifiant du type de crise
	 */
	public final TableField<Record, Long> TYPE_CRISE = createField("type_crise", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant du type de crise");

	/**
	 * Create a <code>remocra.type_crise_evenement_crise</code> table reference
	 */
	public TypeCriseEvenementCrise() {
		this("type_crise_evenement_crise", null);
	}

	/**
	 * Create an aliased <code>remocra.type_crise_evenement_crise</code> table reference
	 */
	public TypeCriseEvenementCrise(String alias) {
		this(alias, TYPE_CRISE_EVENEMENT_CRISE);
	}

	private TypeCriseEvenementCrise(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private TypeCriseEvenementCrise(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Catégorie d'évènement mobilisable pour un type de crise");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.TYPE_CRISE_EVENEMENT_CRISE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.TYPE_CRISE_EVENEMENT_CRISE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.TYPE_CRISE_EVENEMENT_CRISE__TYPE_CRISE_EVENEMENT_CRISE_CATEGORIE_EVENEMENT_FK, Keys.TYPE_CRISE_EVENEMENT_CRISE__TYPE_CRISE_EVENEMENT_CRISE_TYPE_CRISE_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypeCriseEvenementCrise as(String alias) {
		return new TypeCriseEvenementCrise(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TypeCriseEvenementCrise rename(String name) {
		return new TypeCriseEvenementCrise(name, null);
	}
}
