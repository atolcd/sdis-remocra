/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.pdi.tables;


import fr.sdis83.remocra.db.model.pdi.Keys;
import fr.sdis83.remocra.db.model.pdi.Pdi;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Statut extends TableImpl<Record> {

	private static final long serialVersionUID = 2068754423;

	/**
	 * The reference instance of <code>pdi.statut</code>
	 */
	public static final Statut STATUT = new Statut();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>pdi.statut.idstatut</code>.
	 */
	public final TableField<Record, Integer> IDSTATUT = createField("idstatut", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>pdi.statut.code</code>.
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>pdi.statut.libelle</code>.
	 */
	public final TableField<Record, String> LIBELLE = createField("libelle", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * Create a <code>pdi.statut</code> table reference
	 */
	public Statut() {
		this("statut", null);
	}

	/**
	 * Create an aliased <code>pdi.statut</code> table reference
	 */
	public Statut(String alias) {
		this(alias, STATUT);
	}

	private Statut(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Statut(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Pdi.PDI, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.STATUT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.STATUT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Statut as(String alias) {
		return new Statut(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Statut rename(String name) {
		return new Statut(name, null);
	}
}
