/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Table de stockage de la requête pour récupérer les données des indicateurs 
 * d'une crise
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CriseIndicateur extends TableImpl<Record> {

	private static final long serialVersionUID = -1689976574;

	/**
	 * The reference instance of <code>remocra.crise_indicateur</code>
	 */
	public static final CriseIndicateur CRISE_INDICATEUR = new CriseIndicateur();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.crise_indicateur.id</code>. Identifiant interne
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne");

	/**
	 * The column <code>remocra.crise_indicateur.libelle</code>. Libellé de la requête pour description
	 */
	public final TableField<Record, String> LIBELLE = createField("libelle", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Libellé de la requête pour description");

	/**
	 * The column <code>remocra.crise_indicateur.code</code>. Code unique de la requête
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Code unique de la requête");

	/**
	 * The column <code>remocra.crise_indicateur.source_sql</code>. Requête de sélection des données pour les indicateurs
	 */
	public final TableField<Record, String> SOURCE_SQL = createField("source_sql", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Requête de sélection des données pour les indicateurs");

	/**
	 * Create a <code>remocra.crise_indicateur</code> table reference
	 */
	public CriseIndicateur() {
		this("crise_indicateur", null);
	}

	/**
	 * Create an aliased <code>remocra.crise_indicateur</code> table reference
	 */
	public CriseIndicateur(String alias) {
		this(alias, CRISE_INDICATEUR);
	}

	private CriseIndicateur(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private CriseIndicateur(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Table de stockage de la requête pour récupérer les données des indicateurs d'une crise");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_CRISE_INDICATEUR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.CRISE_INDICATEUR_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.CRISE_INDICATEUR_PKEY, Keys.CRISE_INDICATEUR_CODE_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CriseIndicateur as(String alias) {
		return new CriseIndicateur(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CriseIndicateur rename(String name) {
		return new CriseIndicateur(name, null);
	}
}
