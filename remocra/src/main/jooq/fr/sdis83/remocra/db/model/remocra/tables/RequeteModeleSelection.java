/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import com.vividsolutions.jts.geom.Geometry;

import fr.sdis83.remocra.db.converter.GeometryBinding;
import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Requêtes personnalisées lancées par utilisateur dans REMOCRA
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequeteModeleSelection extends TableImpl<Record> {

	private static final long serialVersionUID = -1600728050;

	/**
	 * The reference instance of <code>remocra.requete_modele_selection</code>
	 */
	public static final RequeteModeleSelection REQUETE_MODELE_SELECTION = new RequeteModeleSelection();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.requete_modele_selection.id</code>. Identifiant interne auto-généré
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne auto-généré");

	/**
	 * The column <code>remocra.requete_modele_selection.requete</code>. Requête joué par l'utilisateur
	 */
	public final TableField<Record, String> REQUETE = createField("requete", org.jooq.impl.SQLDataType.VARCHAR, this, "Requête joué par l'utilisateur");

	/**
	 * The column <code>remocra.requete_modele_selection.modele</code>. Identifiant du modèle de requête utilisé
	 */
	public final TableField<Record, Long> MODELE = createField("modele", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant du modèle de requête utilisé");

	/**
	 * The column <code>remocra.requete_modele_selection.utilisateur</code>. Utilisateur aillant lancé la requête
	 */
	public final TableField<Record, Long> UTILISATEUR = createField("utilisateur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Utilisateur aillant lancé la requête");

	/**
	 * The column <code>remocra.requete_modele_selection.date</code>. Heure d'execution de la requête
	 */
	public final TableField<Record, Instant> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Heure d'execution de la requête", new InstantConverter());

	/**
	 * The column <code>remocra.requete_modele_selection.etendu</code>.
	 */
	public final TableField<Record, Geometry> ETENDU = createField("etendu", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "", new GeometryBinding());

	/**
	 * Create a <code>remocra.requete_modele_selection</code> table reference
	 */
	public RequeteModeleSelection() {
		this("requete_modele_selection", null);
	}

	/**
	 * Create an aliased <code>remocra.requete_modele_selection</code> table reference
	 */
	public RequeteModeleSelection(String alias) {
		this(alias, REQUETE_MODELE_SELECTION);
	}

	private RequeteModeleSelection(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private RequeteModeleSelection(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Requêtes personnalisées lancées par utilisateur dans REMOCRA");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_REQUETE_MODELE_SELECTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.REQUETE_MODELE_SELECTION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.REQUETE_MODELE_SELECTION_PKEY, Keys.UK_REQUETE_MODELE_SELECTION_MODELE_UTILISATEUR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.REQUETE_MODELE_SELECTION__REQUETE_MODELE_SELECTION_MODELE, Keys.REQUETE_MODELE_SELECTION__REQUETE_MODELE_SELECTION_UTILISATEUR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RequeteModeleSelection as(String alias) {
		return new RequeteModeleSelection(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RequeteModeleSelection rename(String name) {
		return new RequeteModeleSelection(name, null);
	}
}
