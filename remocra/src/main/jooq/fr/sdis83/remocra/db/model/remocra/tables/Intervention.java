/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import com.vividsolutions.jts.geom.Geometry;

import fr.sdis83.remocra.db.converter.GeometryBinding;
import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Table de synchronisation des interventions pour utilisation dans REMOcRA
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Intervention extends TableImpl<Record> {

	private static final long serialVersionUID = 1347687520;

	/**
	 * The reference instance of <code>remocra.intervention</code>
	 */
	public static final Intervention INTERVENTION = new Intervention();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.intervention.id</code>. Identifiant autogénéré
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant autogénéré");

	/**
	 * The column <code>remocra.intervention.code</code>. Code unique de l'intervention
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR, this, "Code unique de l'intervention");

	/**
	 * The column <code>remocra.intervention.code_type</code>. Code du type de l'intervention
	 */
	public final TableField<Record, String> CODE_TYPE = createField("code_type", org.jooq.impl.SQLDataType.VARCHAR, this, "Code du type de l'intervention");

	/**
	 * The column <code>remocra.intervention.libelle_type</code>. Libellé du type de l'intervention
	 */
	public final TableField<Record, String> LIBELLE_TYPE = createField("libelle_type", org.jooq.impl.SQLDataType.VARCHAR, this, "Libellé du type de l'intervention");

	/**
	 * The column <code>remocra.intervention.priorite</code>. Priorité de l'intervention
	 */
	public final TableField<Record, Integer> PRIORITE = createField("priorite", org.jooq.impl.SQLDataType.INTEGER, this, "Priorité de l'intervention");

	/**
	 * The column <code>remocra.intervention.date_creation</code>. Date de création de l'intervention
	 */
	public final TableField<Record, Instant> DATE_CREATION = createField("date_creation", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de création de l'intervention", new InstantConverter());

	/**
	 * The column <code>remocra.intervention.date_modification</code>. Date de modification de l'intervention
	 */
	public final TableField<Record, Instant> DATE_MODIFICATION = createField("date_modification", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de modification de l'intervention", new InstantConverter());

	/**
	 * The column <code>remocra.intervention.date_cloture</code>. Date de clotûre de l'intervention
	 */
	public final TableField<Record, Instant> DATE_CLOTURE = createField("date_cloture", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de clotûre de l'intervention", new InstantConverter());

	/**
	 * The column <code>remocra.intervention.cloture</code>.
	 */
	public final TableField<Record, String> CLOTURE = createField("cloture", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.intervention.num_voie</code>. Numéro de la voie du lieu de l'intervention
	 */
	public final TableField<Record, String> NUM_VOIE = createField("num_voie", org.jooq.impl.SQLDataType.VARCHAR, this, "Numéro de la voie du lieu de l'intervention");

	/**
	 * The column <code>remocra.intervention.voie</code>. Nom de la voie du lieu de l'intervention
	 */
	public final TableField<Record, String> VOIE = createField("voie", org.jooq.impl.SQLDataType.VARCHAR, this, "Nom de la voie du lieu de l'intervention");

	/**
	 * The column <code>remocra.intervention.commune</code>. Commune de l'intervention
	 */
	public final TableField<Record, Long> COMMUNE = createField("commune", org.jooq.impl.SQLDataType.BIGINT, this, "Commune de l'intervention");

	/**
	 * The column <code>remocra.intervention.geometrie</code>. Géométrie de l'intervention
	 */
	public final TableField<Record, Geometry> GEOMETRIE = createField("geometrie", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "Géométrie de l'intervention", new GeometryBinding());

	/**
	 * Create a <code>remocra.intervention</code> table reference
	 */
	public Intervention() {
		this("intervention", null);
	}

	/**
	 * Create an aliased <code>remocra.intervention</code> table reference
	 */
	public Intervention(String alias) {
		this(alias, INTERVENTION);
	}

	private Intervention(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Intervention(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Table de synchronisation des interventions pour utilisation dans REMOcRA");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_INTERVENTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.INTERVENTION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.INTERVENTION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.INTERVENTION__FK_INTERVENTION_COMMUNE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Intervention as(String alias) {
		return new Intervention(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Intervention rename(String name) {
		return new Intervention(name, null);
	}
}
