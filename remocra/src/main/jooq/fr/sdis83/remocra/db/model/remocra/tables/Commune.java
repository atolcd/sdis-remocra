/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import com.vividsolutions.jts.geom.Geometry;

import fr.sdis83.remocra.db.converter.GeometryBinding;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Commune du Var. Géométrie en WGS 84 de type surfacique
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Commune extends TableImpl<Record> {

	private static final long serialVersionUID = 540226784;

	/**
	 * The reference instance of <code>remocra.commune</code>
	 */
	public static final Commune COMMUNE = new Commune();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.commune.id</code>. Identifiant interne à la base de données
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne à la base de données");

	/**
	 * The column <code>remocra.commune.geometrie</code>. Limite communale de type surfacique. Coordonnées en WGS84
	 */
	public final TableField<Record, Geometry> GEOMETRIE = createField("geometrie", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "Limite communale de type surfacique. Coordonnées en WGS84", new GeometryBinding());

	/**
	 * The column <code>remocra.commune.insee</code>. Code insee
	 */
	public final TableField<Record, String> INSEE = createField("insee", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Code insee");

	/**
	 * The column <code>remocra.commune.nom</code>. Nom
	 */
	public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Nom");

	/**
	 * The column <code>remocra.commune.pprif</code>.
	 */
	public final TableField<Record, Boolean> PPRIF = createField("pprif", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.commune.code</code>.
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>remocra.commune</code> table reference
	 */
	public Commune() {
		this("commune", null);
	}

	/**
	 * Create an aliased <code>remocra.commune</code> table reference
	 */
	public Commune(String alias) {
		this(alias, COMMUNE);
	}

	private Commune(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Commune(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Commune du Var. Géométrie en WGS 84 de type surfacique");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_COMMUNE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.COMMUNE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.COMMUNE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Commune as(String alias) {
		return new Commune(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Commune rename(String name) {
		return new Commune(name, null);
	}
}
