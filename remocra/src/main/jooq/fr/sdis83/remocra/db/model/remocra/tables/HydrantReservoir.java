/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Réservoir pouvant alimenter un ou plusieurs hydrants
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HydrantReservoir extends TableImpl<Record> {

	private static final long serialVersionUID = 114963072;

	/**
	 * The reference instance of <code>remocra.hydrant_reservoir</code>
	 */
	public static final HydrantReservoir HYDRANT_RESERVOIR = new HydrantReservoir();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.hydrant_reservoir.id</code>. Identifiant interne
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne");

	/**
	 * The column <code>remocra.hydrant_reservoir.nom</code>. Libellé du réservoir
	 */
	public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Libellé du réservoir");

	/**
	 * The column <code>remocra.hydrant_reservoir.capacite</code>. Capacité en m3
	 */
	public final TableField<Record, Integer> CAPACITE = createField("capacite", org.jooq.impl.SQLDataType.INTEGER, this, "Capacité en m3");

	/**
	 * The column <code>remocra.hydrant_reservoir.actif</code>. Sélectionnable dans l'interface
	 */
	public final TableField<Record, Boolean> ACTIF = createField("actif", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "Sélectionnable dans l'interface");

	/**
	 * Create a <code>remocra.hydrant_reservoir</code> table reference
	 */
	public HydrantReservoir() {
		this("hydrant_reservoir", null);
	}

	/**
	 * Create an aliased <code>remocra.hydrant_reservoir</code> table reference
	 */
	public HydrantReservoir(String alias) {
		this(alias, HYDRANT_RESERVOIR);
	}

	private HydrantReservoir(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private HydrantReservoir(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Réservoir pouvant alimenter un ou plusieurs hydrants");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_HYDRANT_RESERVOIR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.HYDRANT_RESERVOIR_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.HYDRANT_RESERVOIR_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HydrantReservoir as(String alias) {
		return new HydrantReservoir(alias, this);
	}

	/**
	 * Rename this table
	 */
	public HydrantReservoir rename(String name) {
		return new HydrantReservoir(name, null);
	}
}
