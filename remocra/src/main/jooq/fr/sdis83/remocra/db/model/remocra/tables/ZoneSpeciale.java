/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import com.vividsolutions.jts.geom.Geometry;

import fr.sdis83.remocra.db.converter.GeometryBinding;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZoneSpeciale extends TableImpl<Record> {

	private static final long serialVersionUID = 906805251;

	/**
	 * The reference instance of <code>remocra.zone_speciale</code>
	 */
	public static final ZoneSpeciale ZONE_SPECIALE = new ZoneSpeciale();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.zone_speciale.id</code>.
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.zone_speciale.code</code>.
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.zone_speciale.geometrie</code>.
	 */
	public final TableField<Record, Geometry> GEOMETRIE = createField("geometrie", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "", new GeometryBinding());

	/**
	 * The column <code>remocra.zone_speciale.nom</code>.
	 */
	public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * Create a <code>remocra.zone_speciale</code> table reference
	 */
	public ZoneSpeciale() {
		this("zone_speciale", null);
	}

	/**
	 * Create an aliased <code>remocra.zone_speciale</code> table reference
	 */
	public ZoneSpeciale(String alias) {
		this(alias, ZONE_SPECIALE);
	}

	private ZoneSpeciale(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private ZoneSpeciale(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_ZONE_SPECIALE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.ZONE_SPECIALE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.ZONE_SPECIALE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ZoneSpeciale as(String alias) {
		return new ZoneSpeciale(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ZoneSpeciale rename(String name) {
		return new ZoneSpeciale(name, null);
	}
}
