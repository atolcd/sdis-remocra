/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Demande d'exécution d'un processus ETL dans le cadre d'une tâche planifiée 
 * ou d'une action d'un utilisateur
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessusEtl extends TableImpl<Record> {

	private static final long serialVersionUID = -1315652535;

	/**
	 * The reference instance of <code>remocra.processus_etl</code>
	 */
	public static final ProcessusEtl PROCESSUS_ETL = new ProcessusEtl();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.processus_etl.id</code>. Identifiant interne
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne");

	/**
	 * The column <code>remocra.processus_etl.modele</code>. Modèle de processus associé
	 */
	public final TableField<Record, Long> MODELE = createField("modele", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Modèle de processus associé");

	/**
	 * The column <code>remocra.processus_etl.statut</code>. Etat de la demande
	 */
	public final TableField<Record, Long> STATUT = createField("statut", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Etat de la demande");

	/**
	 * The column <code>remocra.processus_etl.utilisateur</code>. Utilisateur demandeur. Dans le cas d'une tâche planifié, identifiant correspondant à l'utilisateur mentionné dans paramconf
	 */
	public final TableField<Record, Long> UTILISATEUR = createField("utilisateur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Utilisateur demandeur. Dans le cas d'une tâche planifié, identifiant correspondant à l'utilisateur mentionné dans paramconf");

	/**
	 * The column <code>remocra.processus_etl.priorite</code>. Niveau de priorité. De 1 : Pas prioritaire urgent à 5 : Très urgent
	 */
	public final TableField<Record, Long> PRIORITE = createField("priorite", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Niveau de priorité. De 1 : Pas prioritaire urgent à 5 : Très urgent");

	/**
	 * The column <code>remocra.processus_etl.demande</code>. Date et heure de création de la demande
	 */
	public final TableField<Record, Instant> DEMANDE = createField("demande", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "Date et heure de création de la demande", new InstantConverter());

	/**
	 * The column <code>remocra.processus_etl.execution</code>. Date et heure de fin d'execution du processus
	 */
	public final TableField<Record, Instant> EXECUTION = createField("execution", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date et heure de fin d'execution du processus", new InstantConverter());

	/**
	 * Create a <code>remocra.processus_etl</code> table reference
	 */
	public ProcessusEtl() {
		this("processus_etl", null);
	}

	/**
	 * Create an aliased <code>remocra.processus_etl</code> table reference
	 */
	public ProcessusEtl(String alias) {
		this(alias, PROCESSUS_ETL);
	}

	private ProcessusEtl(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private ProcessusEtl(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Demande d'exécution d'un processus ETL dans le cadre d'une tâche planifiée ou d'une action d'un utilisateur");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_PROCESSUS_ETL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.PROCESSUS_ETL_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.PROCESSUS_ETL_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.PROCESSUS_ETL__PROCESSUS_ETL_MODELE, Keys.PROCESSUS_ETL__PROCESSUS_ETL_STATUT, Keys.PROCESSUS_ETL__PROCESSUS_ETL_UTILISATEUR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessusEtl as(String alias) {
		return new ProcessusEtl(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProcessusEtl rename(String name) {
		return new ProcessusEtl(name, null);
	}
}
