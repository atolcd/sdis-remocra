/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Gestion de crise : Episode de crise pour lequel des informations ont été 
 * saisies dans REMOCRA
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crise extends TableImpl<Record> {

	private static final long serialVersionUID = -1696501821;

	/**
	 * The reference instance of <code>remocra.crise</code>
	 */
	public static final Crise CRISE = new Crise();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.crise.id</code>. Identifiant interne
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne");

	/**
	 * The column <code>remocra.crise.nom</code>. Nom de la crise
	 */
	public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Nom de la crise");

	/**
	 * The column <code>remocra.crise.description</code>. Description permettant de fournir des indications sur le contexte de la crise
	 */
	public final TableField<Record, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "Description permettant de fournir des indications sur le contexte de la crise");

	/**
	 * The column <code>remocra.crise.activation</code>. Date et heure d'activation de la crise
	 */
	public final TableField<Record, Instant> ACTIVATION = createField("activation", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "Date et heure d'activation de la crise", new InstantConverter());

	/**
	 * The column <code>remocra.crise.cloture</code>. Date et heure de désactivation de la crise
	 */
	public final TableField<Record, Instant> CLOTURE = createField("cloture", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date et heure de désactivation de la crise", new InstantConverter());

	/**
	 * The column <code>remocra.crise.statut</code>. Identifiant du statut associé
	 */
	public final TableField<Record, Long> STATUT = createField("statut", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant du statut associé");

	/**
	 * The column <code>remocra.crise.type_crise</code>. Identifiant du type de crise associé
	 */
	public final TableField<Record, Long> TYPE_CRISE = createField("type_crise", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant du type de crise associé");

	/**
	 * The column <code>remocra.crise.carte_ant</code>. Groupe de couches complémentaires à carte.json (anticipation)
	 */
	public final TableField<Record, String> CARTE_ANT = createField("carte_ant", org.jooq.impl.SQLDataType.VARCHAR, this, "Groupe de couches complémentaires à carte.json (anticipation)");

	/**
	 * The column <code>remocra.crise.redefinition</code>. Date et heure de modification de la crise
	 */
	public final TableField<Record, Instant> REDEFINITION = createField("redefinition", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date et heure de modification de la crise", new InstantConverter());

	/**
	 * The column <code>remocra.crise.crise_parente</code>. Crise parente lors de la fusion
	 */
	public final TableField<Record, Long> CRISE_PARENTE = createField("crise_parente", org.jooq.impl.SQLDataType.BIGINT, this, "Crise parente lors de la fusion");

	/**
	 * The column <code>remocra.crise.auteur_crise</code>.
	 */
	public final TableField<Record, Long> AUTEUR_CRISE = createField("auteur_crise", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>remocra.crise.carte_op</code>. Groupe de couches complémentaires à carte.json (operationnel)
	 */
	public final TableField<Record, String> CARTE_OP = createField("carte_op", org.jooq.impl.SQLDataType.VARCHAR, this, "Groupe de couches complémentaires à carte.json (operationnel)");

	/**
	 * Create a <code>remocra.crise</code> table reference
	 */
	public Crise() {
		this("crise", null);
	}

	/**
	 * Create an aliased <code>remocra.crise</code> table reference
	 */
	public Crise(String alias) {
		this(alias, CRISE);
	}

	private Crise(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Crise(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Gestion de crise : Episode de crise pour lequel des informations ont été saisies dans REMOCRA");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_CRISE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.CRISE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.CRISE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.CRISE__CRISE_TYPE_CRISE_STATUT, Keys.CRISE__CRISE_TYPE_CRISE, Keys.CRISE__CRISE_CRISE_PARENTE, Keys.CRISE__CRISE_UTILISATEUR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Crise as(String alias) {
		return new Crise(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Crise rename(String name) {
		return new Crise(name, null);
	}
}
