/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Remocra;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * Vue des zones de compétence des organismes
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZoneCompetenceOrganisme extends TableImpl<Record> {

	private static final long serialVersionUID = -593970350;

	/**
	 * The reference instance of <code>remocra.zone_competence_organisme</code>
	 */
	public static final ZoneCompetenceOrganisme ZONE_COMPETENCE_ORGANISME = new ZoneCompetenceOrganisme();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.zone_competence_organisme.organisme_id</code>. Organisme principal
	 */
	public final TableField<Record, Long> ORGANISME_ID = createField("organisme_id", org.jooq.impl.SQLDataType.BIGINT, this, "Organisme principal");

	/**
	 * The column <code>remocra.zone_competence_organisme.organisme_contenu_id</code>. Organisme dont la zone de compétence est contenue ou
superposée avec la zone de compétence de l'organisme princial
	 */
	public final TableField<Record, Long> ORGANISME_CONTENU_ID = createField("organisme_contenu_id", org.jooq.impl.SQLDataType.BIGINT, this, "Organisme dont la zone de compétence est contenue ou\nsuperposée avec la zone de compétence de l'organisme princial");

	/**
	 * Create a <code>remocra.zone_competence_organisme</code> table reference
	 */
	public ZoneCompetenceOrganisme() {
		this("zone_competence_organisme", null);
	}

	/**
	 * Create an aliased <code>remocra.zone_competence_organisme</code> table reference
	 */
	public ZoneCompetenceOrganisme(String alias) {
		this(alias, ZONE_COMPETENCE_ORGANISME);
	}

	private ZoneCompetenceOrganisme(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private ZoneCompetenceOrganisme(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Vue des zones de compétence des organismes");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ZoneCompetenceOrganisme as(String alias) {
		return new ZoneCompetenceOrganisme(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ZoneCompetenceOrganisme rename(String name) {
		return new ZoneCompetenceOrganisme(name, null);
	}
}
