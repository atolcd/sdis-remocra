/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import com.vividsolutions.jts.geom.Geometry;

import fr.sdis83.remocra.db.converter.GeometryBinding;
import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Permis extends TableImpl<Record> {

	private static final long serialVersionUID = 1797700534;

	/**
	 * The reference instance of <code>remocra.permis</code>
	 */
	public static final Permis PERMIS = new Permis();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.permis.id</code>.
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.permis.complement</code>.
	 */
	public final TableField<Record, String> COMPLEMENT = createField("complement", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.annee</code>.
	 */
	public final TableField<Record, Integer> ANNEE = createField("annee", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.date_modification</code>.
	 */
	public final TableField<Record, Instant> DATE_MODIFICATION = createField("date_modification", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new InstantConverter());

	/**
	 * The column <code>remocra.permis.geometrie</code>.
	 */
	public final TableField<Record, Geometry> GEOMETRIE = createField("geometrie", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "", new GeometryBinding());

	/**
	 * The column <code>remocra.permis.nom</code>.
	 */
	public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.numero</code>.
	 */
	public final TableField<Record, String> NUMERO = createField("numero", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.observations</code>.
	 */
	public final TableField<Record, String> OBSERVATIONS = createField("observations", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.parcelle_cadastrale</code>.
	 */
	public final TableField<Record, String> PARCELLE_CADASTRALE = createField("parcelle_cadastrale", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.section_cadastrale</code>.
	 */
	public final TableField<Record, String> SECTION_CADASTRALE = createField("section_cadastrale", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.version</code>.
	 */
	public final TableField<Record, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>remocra.permis.avis</code>.
	 */
	public final TableField<Record, Long> AVIS = createField("avis", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.commune</code>.
	 */
	public final TableField<Record, Long> COMMUNE = createField("commune", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.instructeur</code>.
	 */
	public final TableField<Record, Long> INSTRUCTEUR = createField("instructeur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.interservice</code>.
	 */
	public final TableField<Record, Long> INTERSERVICE = createField("interservice", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.service_instructeur</code>.
	 */
	public final TableField<Record, Long> SERVICE_INSTRUCTEUR = createField("service_instructeur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.voie</code>.
	 */
	public final TableField<Record, String> VOIE = createField("voie", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.permis.date_permis</code>.
	 */
	public final TableField<Record, Instant> DATE_PERMIS = createField("date_permis", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new InstantConverter());

	/**
	 * Create a <code>remocra.permis</code> table reference
	 */
	public Permis() {
		this("permis", null);
	}

	/**
	 * Create an aliased <code>remocra.permis</code> table reference
	 */
	public Permis(String alias) {
		this(alias, PERMIS);
	}

	private Permis(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Permis(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_PERMIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.PERMIS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.PERMIS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.PERMIS__FKC4E3841A60BAC826, Keys.PERMIS__FKC4E3841AD2DA796C, Keys.PERMIS__FKC4E3841ADE630077, Keys.PERMIS__FKC4E3841AE451849A, Keys.PERMIS__FKC4E3841AAD903B23);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Permis as(String alias) {
		return new Permis(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Permis rename(String name) {
		return new Permis(name, null);
	}
}
