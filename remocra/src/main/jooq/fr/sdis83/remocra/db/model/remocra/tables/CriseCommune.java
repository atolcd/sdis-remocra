/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Gestion de crise : commune associée à un épisode de crise. Permet de définir 
 * un teritoire impacté. Les mises à jours de communes sont traçées sous formes 
 * d'évènements spécifiques
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CriseCommune extends TableImpl<Record> {

	private static final long serialVersionUID = 1718171871;

	/**
	 * The reference instance of <code>remocra.crise_commune</code>
	 */
	public static final CriseCommune CRISE_COMMUNE = new CriseCommune();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.crise_commune.crise</code>. Identifiant de la crise associée
	 */
	public final TableField<Record, Long> CRISE = createField("crise", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant de la crise associée");

	/**
	 * The column <code>remocra.crise_commune.commune</code>. Identifiant de la commune associée
	 */
	public final TableField<Record, Long> COMMUNE = createField("commune", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Identifiant de la commune associée");

	/**
	 * Create a <code>remocra.crise_commune</code> table reference
	 */
	public CriseCommune() {
		this("crise_commune", null);
	}

	/**
	 * Create an aliased <code>remocra.crise_commune</code> table reference
	 */
	public CriseCommune(String alias) {
		this(alias, CRISE_COMMUNE);
	}

	private CriseCommune(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private CriseCommune(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Gestion de crise : commune associée à un épisode de crise. Permet de définir un teritoire impacté. Les mises à jours de communes sont traçées sous formes d'évènements spécifiques");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.CRISE_COMMUNE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.CRISE_COMMUNE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.CRISE_COMMUNE__CRISE_COMMUNE_CRISE_FK, Keys.CRISE_COMMUNE__CRISE_COMMUNE_COMMUNE_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CriseCommune as(String alias) {
		return new CriseCommune(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CriseCommune rename(String name) {
		return new CriseCommune(name, null);
	}
}
