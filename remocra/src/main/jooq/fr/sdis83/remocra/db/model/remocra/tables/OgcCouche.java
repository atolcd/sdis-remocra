/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Couche de données mobilisable sur un serveur de données OGC pour un protocole 
 * (service) donné
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OgcCouche extends TableImpl<Record> {

	private static final long serialVersionUID = -1455345711;

	/**
	 * The reference instance of <code>remocra.ogc_couche</code>
	 */
	public static final OgcCouche OGC_COUCHE = new OgcCouche();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.ogc_couche.id</code>. Identifiant interne
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne");

	/**
	 * The column <code>remocra.ogc_couche.code</code>. Code permettant d'identifier dans REMOCRA un layer de manière unique basé sur l'URL, le type de service et le nom de la couche
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Code permettant d'identifier dans REMOCRA un layer de manière unique basé sur l'URL, le type de service et le nom de la couche");

	/**
	 * The column <code>remocra.ogc_couche.nom</code>. Titre associé aux métadonnées de la couche
	 */
	public final TableField<Record, String> NOM = createField("nom", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Titre associé aux métadonnées de la couche");

	/**
	 * The column <code>remocra.ogc_couche.titre</code>.
	 */
	public final TableField<Record, String> TITRE = createField("titre", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.ogc_couche.definition</code>. Définition JSON REMOCRA de la couche pour le type de service
	 */
	public final TableField<Record, String> DEFINITION = createField("definition", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Définition JSON REMOCRA de la couche pour le type de service");

	/**
	 * The column <code>remocra.ogc_couche.ogc_service</code>. Service OGC associé
	 */
	public final TableField<Record, Long> OGC_SERVICE = createField("ogc_service", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Service OGC associé");

	/**
	 * Create a <code>remocra.ogc_couche</code> table reference
	 */
	public OgcCouche() {
		this("ogc_couche", null);
	}

	/**
	 * Create an aliased <code>remocra.ogc_couche</code> table reference
	 */
	public OgcCouche(String alias) {
		this(alias, OGC_COUCHE);
	}

	private OgcCouche(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private OgcCouche(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Couche de données mobilisable sur un serveur de données OGC pour un protocole (service) donné");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_OGC_COUCHE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.OGC_COUCHE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.OGC_COUCHE_PKEY, Keys.OGC_COUCHE_CODE_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.OGC_COUCHE__OGC_SERVICE_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OgcCouche as(String alias) {
		return new OgcCouche(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OgcCouche rename(String name) {
		return new OgcCouche(name, null);
	}
}
