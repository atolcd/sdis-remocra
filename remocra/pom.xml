<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

        <parent>
          <groupId>fr.sdis83.remocra</groupId>
          <artifactId>parent</artifactId>
          <version>2.3.3</version>
        </parent>

	<groupId>fr.sdis83.remocra</groupId>
	<artifactId>remocra</artifactId>
	<packaging>war</packaging>
	<name>remocra</name>

	<scm>
	    <connection/>
            <developerConnection>scm:git:git@github.com/atolcd/sdis-remocra.git</developerConnection>
	    <tag/>
	    <url/>
        </scm>

	<properties>
		<aspectj.version>1.9.4</aspectj.version>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<roo.version>1.2.5.RELEASE</roo.version>
		<slf4j.version>1.6.4</slf4j.version>
		<spring.version>3.1.0.RELEASE</spring.version>
		<spring-security.version>3.1.0.RELEASE</spring-security.version>
		<powermock.version>1.4.12</powermock.version>
		<mockito.version>1.9.0</mockito.version>
		<hibernate.version>4.1.4.Final</hibernate.version>
		<jooq.version>3.6.0</jooq.version>
		<!-- Reverse jooq -->
		<db.host>localhost</db.host>
		<db.user>postgres</db.user>
		<db.pass>postgres</db.pass>
		<db.name>remocra</db.name>
		<guice-persist-jooq.version>0.1.2</guice-persist-jooq.version>
		<plugin.build-helper-maven-plugin>1.10</plugin.build-helper-maven-plugin>
<!--		Spotless-->
<!--		2.31.0+ requiert jdk 11-->
		<spotless.version>2.30.0</spotless.version>
<!--		1.7 maximum pour compatibilitÃ© JDK 8-->
		<googlejavaformat.version>1.7</googlejavaformat.version>
	</properties>
	<repositories>
		<!-- Local repository -->
		<repository>
			<id>local-maven-repo</id>
			<name>Local Maven Repo</name>
			<url>file://${project.basedir}/local-maven-repo</url>
		</repository>
		<!-- Remote repositories -->
		<repository>
			<id>spring-maven-release</id>
			<name>Spring Maven Release Repository</name>
			<url>https://maven.springframework.org/release</url>
		</repository>
		<repository>
			<id>spring-maven-milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>https://maven.springframework.org/milestone</url>
		</repository>
		<repository>
			<id>spring-roo-repository</id>
			<name>Spring Roo Repository</name>
			<url>http://spring-roo-repository.springsource.org/release</url>
		</repository>
		<repository>
			<id>Hibernate Spatial repo</id>
			<url>http://www.hibernatespatial.org/repository</url>
		</repository>
		<repository>
			<id>boundless</id>
			<url>http://repo.boundlessgeo.com/main/</url>
		</repository>


	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-maven-release</id>
			<name>Spring Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-maven-milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-roo-repository</id>
			<name>Spring Roo Repository</name>
			<url>http://spring-roo-repository.springsource.org/release</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<!-- General dependencies for standard applications -->
		<!--<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
			<version>1.46</version>
		</dependency>-->
		<!--<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13.1</version>
		</dependency>-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.175</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.13.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.kubek2k</groupId>
			<artifactId>springockito</artifactId>
			<version>1.0.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.kubek2k</groupId>
			<artifactId>springockito-annotations</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.flexjson</groupId>
			<artifactId>flexjson</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<!-- ROO dependencies -->
		<dependency>
			<groupId>org.springframework.roo</groupId>
			<artifactId>org.springframework.roo.annotations</artifactId>
			<version>${roo.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.9</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib</artifactId>
				</exclusion>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<exclusions>
				<exclusion>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.5.6</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.3</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-js-resources</artifactId>
			<version>2.2.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.1</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>jstl-api</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jstl-impl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>dumbster</groupId>
			<artifactId>dumbster</artifactId>
			<version>1.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.5-rc1</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>

		<!-- GeoDeps -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>4.0-M1</version>
			<exclusions>
				<exclusion>
					<groupId>org.postgis</groupId>
					<artifactId>postgis-jdbc</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- the Postgis JDBC driver -->
		<dependency>
			<groupId>net.postgis</groupId>
			<artifactId>postgis-jdbc</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- Exclure les stubs sinon ils entrent en conflit avec le driver PostgreSQL -->
		<!--dependency>
			<groupId>org.postgis</groupId>
			<artifactId>postgis-stubs</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency-->
		<dependency>
			<groupId>org.opengeo</groupId>
			<artifactId>geodb</artifactId>
			<version>0.8</version>
			<exclusions>
				<exclusion>
					<groupId>com.vividsolutions</groupId>
					<artifactId>jts</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- File Upload -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Surcharge la version pour utiliser la derniÃ¨re -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.9.1</version>
		</dependency>

		<!-- Mock des methodes static -->

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule-agent</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.6</version>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.cts</groupId>
			<artifactId>cts</artifactId>
			<version>1.69</version>
		</dependency>

		<!-- Gestion du l'authentification JWT sortante -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>4.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.modelmapper.extensions</groupId>
			<artifactId>modelmapper-jooq</artifactId>
			<version>2.0.0</version>
		</dependency>
		<!-- Quartz API -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180130</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.31</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jodreports</groupId>
			<artifactId>jodreports</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>xdocreport</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.6</version>
		</dependency>
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.poi.xwpf.converter.pdf</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.converter.odt.odfdom</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.2.3</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
			<version>2.2.3</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>remocra</finalName>
		<plugins>
<!--			Spotless-->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>

				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
				<configuration>
					<java>
						<googleJavaFormat>
							<version>${googlejavaformat.version}</version>
						</googleJavaFormat>
						<removeUnusedImports />
					</java>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <!-- <configuration> <webXml>target/web.xml</webXml> </configuration> -->
                <configuration>
                    <warSourceExcludes>
						js/app/**/*.js,
						js/build/**, js/jasmine-1.1.0/**,
						js/proj4js-1.1.0/**, js/Skirtle/**, js/test/**,
						js/ext-4.1.1a/*,
						js/ext-4.1.1a/build/**,
						js/ext-4.1.1a/builds/**,
						js/ext-4.1.1a/cmd/**,
						js/ext-4.1.1a/docs/**,
						js/ext-4.1.1a/examples/**,
						js/ext-4.1.1a/jsbuilder/**,
						js/ext-4.1.1a/locale/**,
						js/ext-4.1.1a/pkgs/**,
						js/ext-4.1.1a/resources/css/*debug*.css,
						js/ext-4.1.1a/resources/css/ext-all.css,
						js/ext-4.1.1a/resources/css/*access*.css,
						js/ext-4.1.1a/resources/css/*scoped*.css,
						js/ext-4.1.1a/resources/css/*ie*.css,
						js/ext-4.1.1a/resources/css/*neptune*.css,
						js/ext-4.1.1a/resources/css/*sandbox*.css,
						js/ext-4.1.1a/resources/css/*standard*.css,
						js/ext-4.1.1a/resources/themes/images/access/**,
						js/ext-4.1.1a/resources/themes/images/default/**,
						js/ext-4.1.1a/resources/themes/images/neptune/**,
						js/ext-4.1.1a/resources/themes/lib/**,
						js/ext-4.1.1a/resources/themes/stylesheets/**,
						js/ext-4.1.1a/resources/themes/templates/**,
						js/ext-4.1.1a/resources/themes/*,
						js/ext-4.1.1a/resources/sass/**,
						js/ext-4.1.1a/src/**,
						js/ext-4.1.1a/welcome/**,
						js/openlayers-2.12/apidoc_config/**,
						js/openlayers-2.12/art/**,
						js/openlayers-2.12/doc/**,
						js/openlayers-2.12/doc_config/**,
						js/openlayers-2.12/examples/**,
						js/openlayers-2.12/img/**,
						js/openlayers-2.12/lib/**,
						js/openlayers-2.12/licenses/**,
						js/openlayers-2.12/notes/**,
						js/openlayers-2.12/tests/**,
						js/openlayers-2.12/tools/**,
						js/openlayers-2.12/*,
						**/.gitignore,
						selenium/**
					</warSourceExcludes>
                    <webResources>
                        <resource>
                            <excludes>
                                <exclude>dbre.xml</exclude>
                            </excludes>
                            <directory>src/main/resources</directory>
                        </resource>
                    </webResources>
                    <archive>
                        <manifestEntries>
	                    <Revision-Number>${buildNumber}</Revision-Number>
                            <Project-Version>${project.version}</Project-Version>
                            <Build-Time>${maven.build.timestamp}</Build-Time>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.2</version>
				<!-- NB: do not use 1.3 or 1.3.x due to MASPECTJ-90 and do not use 1.4
					due to declare parents issue -->
				<dependencies>
					<!-- NB: You must use Maven 2.0.9 or above or these are ignored (see
						MNG-2972) -->
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outxml>true</outxml>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
						<aspectLibrary>
							<groupId>org.springframework.security</groupId>
							<artifactId>spring-security-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<printSummary>false</printSummary>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<excludes>
						<exclude>**/*_Roo_*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<!-- IDE -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.7</version>
				<!-- Note 2.8 does not work with AspectJ aspect path -->
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<additionalBuildcommands>
						<buildCommand>
							<name>org.eclipse.ajdt.core.ajbuilder</name>
							<arguments>
								<aspectPath>org.springframework.aspects</aspectPath>
							</arguments>
						</buildCommand>
						<buildCommand>
							<name>org.springframework.ide.eclipse.core.springbuilder</name>
						</buildCommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
						<projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
						<projectnature>com.springsource.sts.roo.core.nature</projectnature>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
				</configuration>
			</plugin>
			<plugin>
			   <groupId>org.apache.tomcat.maven</groupId>
			   <artifactId>tomcat7-maven-plugin</artifactId>
			   <version>2.2</version>
			   <configuration>
				  <url>${tomcat.manager.url}</url>
				  <path>${tomcat.manager.path}</path>
				  <username>${tomcat.manager.username}</username>
				  <password>${tomcat.manager.password}</password>
				  <uriEncoding>utf-8</uriEncoding>
			   </configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${plugin.build-helper-maven-plugin}</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/jooq</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.0.1.v20110908</version>
				<configuration>
<!-- 					<scanIntervalSeconds>10</scanIntervalSeconds> -->

					<webAppConfig>
						<contextPath>/${project.name}</contextPath>
						<overrideDescriptor>src/test/webapp/jetty-nocache.xml</overrideDescriptor>
					</webAppConfig>
					<jettyConfig>

					</jettyConfig>
					<stopPort>9966</stopPort>
					<stopKey>stopKeyRemocra</stopKey>
				</configuration>
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <id>start-jetty</id> -->
				<!-- <phase>pre-integration-test</phase> -->
				<!-- <goals> -->
				<!-- <goal>stop</goal> -->
				<!-- <goal>run-exploded</goal> -->
				<!-- </goals> -->
				<!-- <configuration> -->
				<!-- <scanIntervalSeconds>0</scanIntervalSeconds> -->
				<!-- <daemon>true</daemon> -->
				<!-- </configuration> -->
				<!-- </execution> -->
				<!-- <execution> -->
				<!-- <id>stop-jetty</id> -->
				<!-- <phase>post-integration-test</phase> -->
				<!-- <goals> -->
				<!-- <goal>stop</goal> -->
				<!-- </goals> -->
				<!-- </execution> -->
				<!-- </executions> -->
			</plugin>



			<!--This plugin's configuration is used to store Eclipse m2e settings
				only. It has no influence on the Maven build itself. -->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>aspectj-maven-plugin</artifactId>
									<versionRange>[1.0,)</versionRange>
									<goals>
										<goal>test-compile</goal>
										<goal>compile</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<execute/>
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<browser>*firefox</browser>
					<suite>src/main/webapp/selenium/test-suite.xhtml</suite>
					<results>${project.build.directory}/selenium.html</results>
					<startURL>http://localhost:4444/</startURL>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-server</artifactId>
						<version>2.13.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
	            <groupId>com.googlecode.jslint4java</groupId>
	            <artifactId>jslint4java-maven-plugin</artifactId>
	            <version>2.0.2</version>

	            <executions>
		            <execution>
		                <id>lint</id>
		                <phase>process-resources</phase>
		                <goals>
		                    <goal>lint</goal>
		                </goals>
		            </execution>
		        </executions>

	            <configuration>
	                <includes>
	                    <include>**js/app/remocra/**/*.js</include>
	                </includes>
	                <excludes>
	                    <exclude>**js/app/remocra/ux/**</exclude>
	                </excludes>
	                <failOnError>true</failOnError>
	                <options>
	                <!--
    adsafe       If adsafe rules should be enforced
    bitwise      If bitwise operators should be allowed
    browser      If the standard browser globals should be predefined
    cap          If upper case html should be allowed
    confusion    If types can be used inconsistently
    continue     If the continuation statement should be tolerated
    css          If css workarounds should be tolerated
    debug        If debugger statements should be allowed
    devel        If logging should be allowed (console, alert, etc.)
    encoding     Specify the input encoding
    eqeq         If == should be allowed
    es5          If es5 syntax should be allowed
    evil         If eval should be allowed
    forin        If for in statements need not filter
    fragment     If html fragments should be allowed
    help         Display usage information
                   Default: false
    indent       The indentation factor
    jslint       Specify an alternative version of jslint.js
    maxerr       The maximum number of errors to allow
    maxlen       The maximum length of a source line
    newcap       If constructor names capitalization is ignored
    node         If node.js globals should be predefined
    nomen        If names may have dangling _
    on           If html event handlers should be allowed
    passfail     If the scan should stop on first error
    plusplus     If increment/decrement should be allowed
    predef       The names of predefined global variables
    properties   If all property names must be declared with
                   /*properties*/
    regexp       If the . should be allowed in regexp literals
    report       Display report in different formats: plain, xml, junit,
                   checkstyle and report
    rhino        If the rhino environment globals should be predefined
    safe         If use of some browser features should be restricted
    sloppy       If the 'use strict'; pragma is optional
    sub          If all forms of subscript notation are tolerated
    timeout      Maximum number of seconds JSLint can run for
                   Default: 0
    undef        If variables can be declared out of order
    unparam      If unused parameters should be tolerated
    vars         If multiple var statements per function should be allowed
    version      Show the version of JSLint in use.
                   Default: false
    white        If sloppy whitespace is tolerated
    widget       If the yahoo widgets globals should be predefined
    windows      If ms windows-specific globals should be predefined
	                 -->
	                    <!-->adsafe>false</adsafe-->
	                    <bitwise>true</bitwise>
	                    <browser>false</browser>
	                    <cap>false</cap>
	                    <!-->confusion>true</confusion-->
	                    <continue>false</continue>
	                    <css>false</css>
	                    <debug>false</debug>
	                    <devel>false</devel>
	                    <!--encoding>UTF8</encoding-->
	                    <eqeq>true</eqeq>
	                    <es5>false</es5> <!-- es5 false : IMPORTANT IE7 car dÃ©tecte les virgules inutiles !  -->
	                    <evil>true</evil>
	                    <forin>true</forin>
	                    <fragment>false</fragment>
	                    <!--indent></indent-->
	                    <!--jslint></jslint-->
	                    <maxerr>100</maxerr>
	                    <maxlen>180</maxlen>
	                    <newcap>false</newcap>
	                    <!--node></node-->
	                    <nomen>true</nomen>
	                    <on>false</on>
	                    <passfail>false</passfail>
	                    <plusplus>true</plusplus>
	                    <predef/>
	                    <properties>false</properties>
	                    <regexp>true</regexp>
	                    <!--report></report-->
	                    <!--rhino></rhino-->
	                    <!--safe>false</safe-->
	                    <sloppy>true</sloppy>
	                    <sub>true</sub>
	                    <!--timeout>30</timeout-->
	                    <undef>true</undef>
	                    <unparam>false</unparam>
	                    <vars>true</vars>
	                    <!--version></version-->
	                    <white>true</white>
	                    <!--widget></widget-->
	                    <windows>false</windows>
	                </options>
	            </configuration>
     		</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.googlecode.jslint4java
										</groupId>
										<artifactId>
											jslint4java-maven-plugin
										</artifactId>
										<versionRange>
											[2.0.2,)
										</versionRange>
										<goals>
											<goal>lint</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<!-- Exemple :
						mvn clean jooq-codegen:generate
					-->
					<groupId>org.jooq</groupId>
					<artifactId>jooq-codegen-maven</artifactId>
					<version>${jooq.version}</version>
					<configuration>
						<jdbc>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://${db.host}/${db.name}</url>
							<user>${db.user}</user>
							<password>${db.pass}</password>
						</jdbc>
						<generator>
							<generate>
								<pojos>true</pojos>
								<records>false</records>
								<fluentSetters>true</fluentSetters>
							</generate>
							<database>
								<name>org.jooq.util.postgres.PostgresDatabase</name>
								<includes>.*</includes>
								<schemata>
									<schema>
										<inputSchema>remocra</inputSchema>
										<outputSchema>remocra</outputSchema>
									</schema>
									<schema>
										<inputSchema>pdi</inputSchema>
										<outputSchema>pdi</outputSchema>
									</schema>
									<schema>
										<inputSchema>tracabilite</inputSchema>
										<outputSchema>tracabilite</outputSchema>
									</schema>
									<schema>
										<inputSchema>couverture_hydraulique</inputSchema>
										<outputSchema>couverture_hydraulique</outputSchema>
									</schema>
									<schema>
										<inputSchema>incoming</inputSchema>
										<outputSchema>incoming</outputSchema>
									</schema>
								</schemata>
								<customTypes>
									<customType>
										<name>Instant</name>
										<type>org.joda.time.Instant</type>
										<converter>fr.sdis83.remocra.db.converter.InstantConverter</converter>
									</customType>
									<customType>
										<name>LocalTime</name>
										<type>org.joda.time.LocalTime</type>
										<converter>fr.sdis83.remocra.db.converter.LocalTimeConverter</converter>
									</customType>
                                    <customType>
                                        <name>Geometry</name>
                                        <type>com.vividsolutions.jts.geom.Geometry</type>
                                        <converter>fr.sdis83.remocra.db.converter.GeometryBinding</converter>
                                    </customType>
									<customType>
										<name>LineString</name>
										<type>com.vividsolutions.jts.geom.LineString</type>
										<converter>fr.sdis83.remocra.db.converter.LineStringBinding</converter>
										</customType>
									<customType>
										<name>Point</name>
										<type>com.vividsolutions.jts.geom.Point</type>
										<converter>fr.sdis83.remocra.db.converter.PointBinding</converter>
									</customType>
									<customType>
										<name>Polygon</name>
										<type>com.vividsolutions.jts.geom.Polygon</type>
										<converter>fr.sdis83.remocra.db.converter.PolygonBinding</converter>
									</customType>
								</customTypes>
								<forcedTypes>
									<forcedType>
										<name>Instant</name>
										<!-- .* pour gÃ©rer "without time zone", â¦ -->
										<types>timestamp(\ .*)?</types>
									</forcedType>
									<forcedType>
										<name>LocalTime</name>
										<!-- .* pour gÃ©rer "without time zone", â¦ -->
										<types>time(\ .*)?</types>
									</forcedType>
									<forcedType>
										<name>Geometry</name>
										<!-- Associate that custom type with your binding. -->
										<expression>geometrie|remocra.requete_modele_selection.etendu</expression>
									</forcedType>
								</forcedTypes>
							</database>
							<target>
								<packageName>fr.sdis83.remocra.db.model</packageName>
								<directory>${basedir}/src/main/jooq</directory>
							</target>
						</generator>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>modeinfo-able</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
	    		<plugins>
					<!-- Inclusion des fichiers client-ng -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/remocra/static</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/../client-ng/dist/remocra/static</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Production du fichier all-classes.js -->
	    		    <plugin>
				        <groupId>org.codehaus.mojo</groupId>
				        <artifactId>buildnumber-maven-plugin</artifactId>
				        <version>1.1</version>
				        <executions>
				            <execution>
				                <phase>process-resources</phase>
				                <goals>
				                    <goal>create</goal>
				                </goals>
				              </execution>
				        </executions>
				        <configuration>
				            <doCheck>false</doCheck>
				            <doUpdate>false</doUpdate>
				            <shortRevisionLength>5</shortRevisionLength>
				        </configuration>
				      </plugin>

					    <plugin>
							<artifactId>exec-maven-plugin</artifactId>
							<groupId>org.codehaus.mojo</groupId>
							<version>1.2.1</version>
							<executions>
								<execution>
									<id>Compilation JS</id>
									<phase>process-resources</phase>
									<goals>
										<goal>exec</goal>
									</goals>
									<configuration>
										<executable>${project.basedir}/src/main/webapp/js/build/build.sh</executable>
									</configuration>
								</execution>
							</executions>
						</plugin>
   		 		</plugins>
     		 </build>
		</profile>
	</profiles>
</project>
